{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/data/dataController.ts","src/data/factions.ts","src/editor/editor.ts","src/init.ts","src/lists/armyList.ts","src/lists/factionList.ts","src/lists/unitList.ts","src/objects/availableUnit.ts","src/objects/model.ts","src/objects/unit.ts","src/settings.ts","src/utils/costController.ts"],"names":["f","exports","module","define","amd","window","global","self","this","listbuilder","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","factions_1","__importDefault","settings_1","Data","success","failure","filesLoaded","data","prototype","loadFactionData","_this","faction","default","supportedFactions","indexOf","json","dataFile","request_1","XMLHttpRequest","onload","onFileLoaded","JSON","parse","response","onerror","onFileFailed","open","send","name","jsonData","Adeptus Custodes","icon","Adeptus Mechanicus","Astra Militarum","Blood Angels","Chaos Daemons","Chaos Space Marines","Craftworlds","Dark Angels","Death Guard","Deathwatch","Drukhari","Grey Knights","Harlequins","Imperial Knights","Necrons","Orks","Space Marines","T'au Empire","Thousand Sons","Tyranids","Ynnari","Editor","editorContainerHTML","document","getElementById","editorHTML","style","width","unit","editUnit","id","listContents","list","armyList","type","renderEdit","addModel","removeModel","editLoadout","argStr","args","split","updateModelWargear","editAllegiance","index","updateAllegiance","closeEdit","updateCosts","renderList","editFields","innerHTML","getUnitNameAndCostHTML","globalMax","unitInfo","modelTypes","maxAmount","globalMin","defaultAmount","totalModels","models","model","getModelTypeHTML","max","getStatsHeadersHTML","getModelStatsHTML","getWeaponsHeadersHTML","getWeaponsHTML","getWeaponLoadoutSelectionHTML","getSeperatorHTML","canAdd","canRemove","getButtonRowHTML","allegianceHTML","getAllegianceHTML","costHTML","totalPoints","totalPower","totalWounds","modelId","HTML","html","getUnProfiledStats","modelInfo","M","WS","BS","S","T","W","A","Ld","Sv","selectedWeapons","slot","Wargear","selectedWeaponConfig","_i","_a","weaponId","push","_b","selectedWeapons_1","weapon","weaponInfo","wargear","undefined","WargearAbility","profiles","Range","Type","AP","D","Abilities","desription","description","profile","profileInfo","valueStr","valueId","loadoutLength","selected","weaponsList","cost","Points","formatWeaponsList","name_1","weapons","formattedList","modelType","allegiances","Allegiance","selectedAllegiance","dataController_1","costController_1","factionList_1","unitList_1","armyList_1","editor_1","ListBuilder","costs","factionList","unitList","editor","setup","loadingFailure","init","alert","unit_1","ArmyList","HQ","Troops","Elites","Fast Attack","Heavy Support","Dedicated Transport","Flyer","Fortification","Lord Of War","currentUnits","addUnit","removeUnit","tempArray","addSmiteSpell","addFactionSpells","spells","power","points","wounds","updateCostsExt","listContainer","imageName","getImageName","unitTable","createElement","className","getStatsHTML","getAbilitiesHTML","getPsykerHTML","getKeywordsHTML","appendChild","getUnitControls","spacer","controlList","deleteBtn","editBtn","FactionList","menuBtn","setupFactionList","openNav","marginLeft","paddingLeft","closeNav","toggleNav","isOpen","onclick","createFactionListElement","supported","listItem","factionSelected","availableUnit_1","UnitList","currentFaction","availableList","factionData","units","availableListHTML","containingList","typeList","currentType","spellsList","smite","spellType","this_1","spellItem","AvailableUnit","getPointsValue","getPowerValue","getWoundsValue","getModelsValue","modelPoints","PointsIncludesWargear","Model","model_1","Unit","unitId","setupDefaultModels","modelNumStr","stat","stats","value","Wounds","listOfWeapons","amountsPerWeapon","selectedIndex","weaponIndex","numberOf","abilityHTML","abilityList","abilities","ability","factionAbility","htmlString","getFactionAbility","factionSpecialRules","psykerHTML","Psyker","keywords","keyword","toUpperCase","Keywords","keywordHTML","keywords_1","calculateModels","calculateWounds","calculatePoints","calculatePower","newModel","pop","modelIndex","weaponSlot","num","Costs","pointsElement","powerElement","woundsElement","modelsElement"],"mappings":"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","file":"listbuilder.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","import Factions from '../data/factions';\r\nimport Settings from '../settings';\r\n\r\ninterface DataCollection {\r\n  [key: string]: any;\r\n}\r\n\r\nexport default class Data {\r\n\r\n  public data: DataCollection;\r\n  private filesLoaded: number;\r\n  private success: Function;\r\n  private failure: Function;\r\n\r\n  constructor(success: Function, failure: Function) {\r\n    this.filesLoaded = 0;\r\n    this.success = success;\r\n    this.failure = failure;\r\n    this.data = {};\r\n  }\r\n\r\n  public loadFactionData() {\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) > -1) {\r\n        let json = Factions[faction].dataFile;\r\n        let request = new XMLHttpRequest();\r\n        request.onload = () => {\r\n          this.onFileLoaded(faction, JSON.parse(request.response));\r\n        };\r\n        request.onerror = () => {\r\n          this.onFileFailed();\r\n        };\r\n        request.open('get', '/Content/40kListBuilder/resources/data/' + json);\r\n        request.send();\r\n      }\r\n    }\r\n  }\r\n\r\n  private onFileLoaded(name: string, jsonData: Object) {\r\n    this.filesLoaded++;\r\n    this.data[name] = jsonData;\r\n    if (this.filesLoaded === Settings.supportedFactions.length) {\r\n      this.success();\r\n    }\r\n  }\r\n\r\n  private onFileFailed() {\r\n    this.failure();\r\n  }\r\n}\r\n","// TODO: should just be a list of names, icons, and file locations\r\n\r\nlet factions: any = {\r\n  \"Adeptus Custodes\": {\r\n    \"dataFile\": \"AdeptusCustodes.json\",\r\n    \"icon\": \"talonsoftheemperor.png\"\r\n  },\r\n  \"Adeptus Mechanicus\": {\r\n    \"dataFile\": \"AdeptusMechanicus.json\",\r\n    \"icon\": \"adeptusmechanicus.png\"\r\n  },\r\n  \"Astra Militarum\": {\r\n    \"dataFile\": \"AstraMilitarum.json\",\r\n    \"icon\": \"astramilitarum.png\"\r\n  },\r\n  \"Blood Angels\": {\r\n    \"dataFile\": \"BloodAngles.json\",\r\n    \"icon\": \"bloodangels.png\"\r\n  },\r\n  \"Chaos Daemons\": {\r\n    \"dataFile\": \"Chaosaemons.json\",\r\n    \"icon\": \"chaosdaemons.png\"\r\n  },\r\n  \"Chaos Space Marines\": {\r\n    \"dataFile\": \"ChaosSpaceMarines.json\",\r\n    \"icon\": \"chaosdaemons.png\"\r\n  },\r\n  \"Craftworlds\": {\r\n    \"dataFile\": \"Craftworlds.json\",\r\n    \"icon\": \"craftworld.png\"\r\n  },\r\n  \"Dark Angels\": {\r\n    \"dataFile\": \"DarkAngles.json\",\r\n    \"icon\": \"darkangels.png\"\r\n  },\r\n  \"Death Guard\": {\r\n    \"dataFile\": \"DeathGuard.json\",\r\n    \"icon\": \"deathwatch.png\"\r\n  },\r\n  \"Deathwatch\": {\r\n    \"dataFile\": \"Deathwatch.json\",\r\n    \"icon\": \"hereticastartes.png\"\r\n  },\r\n  \"Drukhari\": {\r\n    \"dataFile\": \"Drukhari.json\",\r\n    \"icon\": \"drukhari.png\"\r\n  },\r\n  \"Grey Knights\": {\r\n    \"dataFile\": \"GreyKnights.json\",\r\n    \"icon\": \"greyknights.png\"\r\n  },\r\n  \"Harlequins\": {\r\n    \"dataFile\": \"Harlequins.json\",\r\n    \"icon\": \"harlequins.png\"\r\n  },\r\n  \"Imperial Knights\": {\r\n    \"dataFile\": \"ImperialKnights.json\",\r\n    \"icon\": \"imperialknights.png\"\r\n  },\r\n  \"Necrons\": {\r\n    \"dataFile\": \"Necrons.json\",\r\n    \"icon\": \"necrons.png\"\r\n  },\r\n  \"Orks\": {\r\n    \"dataFile\": \"Orks.json\",\r\n    \"icon\": \"orks.png\"\r\n  },\r\n  \"Space Marines\": {\r\n    \"dataFile\": \"SpaceMarines.json\",\r\n    \"icon\": \"spacemarines.png\"\r\n  },\r\n  \"T'au Empire\": {\r\n    \"dataFile\": \"TauEmpire.json\",\r\n    \"icon\": \"tau.png\"\r\n  },\r\n  \"Thousand Sons\": {\r\n    \"dataFile\": \"ThousandSons.json\",\r\n    \"icon\": \"hereticastartes.png\"\r\n  },\r\n  \"Tyranids\": {\r\n    \"dataFile\": \"Tyranids.json\",\r\n    \"icon\": \"tyranids.png\"\r\n  },\r\n  \"Ynnari\": {\r\n    \"dataFile\": \"Ynnari.json\",\r\n    \"icon\": \"ynnari.png\"\r\n  }\r\n};\r\n\r\nexport default factions;\r\n","export default class Editor {\r\n\r\n  private editorContainerHTML: HTMLElement;\r\n  private editorHTML: HTMLElement;\r\n  private unit: any;\r\n  \r\n  public constructor() {\r\n    this.editorContainerHTML = (document.getElementById(\"editor\") as HTMLElement);\r\n    this.editorHTML = (document.getElementById(\"editorForm\") as HTMLElement);\r\n    this.editorContainerHTML.style.width = '0px';\r\n    this.unit = {};\r\n  }\r\n\r\n  public editUnit(id: number) {\r\n    let listContents = window.list.armyList.listContents;\r\n    for (let type in listContents) {\r\n      for (let unit in listContents[type]) {\r\n        if (listContents[type][unit].id === id) {\r\n          this.unit = listContents[type][unit];\r\n          this.renderEdit();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public addModel(id) {\r\n    this.unit.addModel(id);\r\n  }\r\n\r\n  public removeModel(id) {\r\n    this.unit.removeModel(id);\r\n  }\r\n\r\n  public editLoadout(argStr) {\r\n    let args = argStr.split('-');\r\n    this.unit.updateModelWargear(args[0], args[1], args[2], args[3]);\r\n  }\r\n\r\n  public editAllegiance(index) {\r\n    this.unit.updateAllegiance(index);\r\n  }\r\n\r\n  public closeEdit() {\r\n    this.editorContainerHTML.style.width = '0px';\r\n    window.list.armyList.updateCosts();\r\n    window.list.armyList.renderList();\r\n  } \r\n\r\n  public renderEdit() {\r\n    this.editorContainerHTML.style.width = '100%';\r\n    let editFields = this.editorHTML.innerHTML;\r\n    editFields = '';\r\n\r\n    editFields += '<table class=\"editTable\">';\r\n    editFields += this.getUnitNameAndCostHTML(this.unit);\r\n\r\n    let globalMax = this.unit.unitInfo.modelTypes[0].maxAmount;\r\n    let globalMin = this.unit.unitInfo.modelTypes[0].defaultAmount;\r\n    let totalModels = 0;\r\n    for (let i = 0; i < this.unit.unitInfo.modelTypes.length; i++) {\r\n      totalModels += this.unit.models[this.unit.unitInfo.modelTypes[i].model].length;\r\n    }\r\n\r\n    for (let i = 0; i < this.unit.unitInfo.modelTypes.length; i++) {\r\n      editFields += this.getModelTypeHTML(this.unit.unitInfo.modelTypes[i].model);\r\n      let models = this.unit.models[this.unit.unitInfo.modelTypes[i].model];\r\n      let max = this.unit.unitInfo.modelTypes[i].maxAmount;\r\n      if (models) {\r\n        for (let model in models) {\r\n          editFields += this.unit.getStatsHeadersHTML();\r\n          editFields += this.getModelStatsHTML(this.unit, models[model]);\r\n          editFields += this.unit.getWeaponsHeadersHTML();\r\n          editFields += this.getWeaponsHTML(models[model], this.unit.faction);\r\n          editFields += this.getWeaponLoadoutSelectionHTML(i, model, models[model]);\r\n          editFields += this.getSeperatorHTML();\r\n        }\r\n        let canAdd = (totalModels < globalMax && models.length < max);\r\n        let canRemove = (totalModels > globalMin && models.length > 0);\r\n        editFields += this.getButtonRowHTML(canAdd, canRemove, i);\r\n        editFields += this.getSeperatorHTML();\r\n      }\r\n    }\r\n\r\n    let allegianceHTML = this.getAllegianceHTML(this.unit);\r\n    if (allegianceHTML !== '') {\r\n      editFields += '<tr><td class=\"modelType\" colspan=\"11\">Allegiance</td></tr>';\r\n      editFields += allegianceHTML;\r\n    }\r\n    editFields += '</table>';\r\n\r\n    editFields += '<button class=\"closeButton\" type=\"button\" onclick=\"list.editor.closeEdit()\">Done</button>';\r\n    this.editorHTML.innerHTML = editFields;\r\n  }\r\n\r\n  private getUnitNameAndCostHTML(unit) {\r\n    let costHTML =  'Points: ' + unit.totalPoints\r\n                 +  ' | Power: ' + unit.totalPower\r\n                 +  ' | Wounds: ' + unit.totalWounds\r\n                 +  ' | Models: ' + unit.totalModels;\r\n    let HTML = '<tr>'\r\n      + '<td class=\"name\" colspan=\"5\">' + unit.name + '</td>'\r\n      + '<td class=\"cost\" colspan=\"6\">' + costHTML + '</td>'\r\n      + '</tr>';\r\n    \r\n    return HTML;\r\n  }\r\n\r\n  private getModelTypeHTML(type) {\r\n    return '<tr><td class=\"modelType\" colspan=\"11\">' + type + '(s)</td></tr>';\r\n  }\r\n\r\n  private getButtonRowHTML(canAdd, canRemove, model) {\r\n    let  modelId = \"'\" + model + \"'\";\r\n    let HTML = '<tr><td colspan=\"11\">';\r\n    if (canAdd) {\r\n      HTML += '<button class=\"add\" type=\"button\" onclick=\"list.editor.addModel(' + modelId + ')\">Add</button>';\r\n    }\r\n    if (canRemove) {\r\n      HTML += '<button class=\"remove\" type=\"button\" onclick=\"list.editor.removeModel(' + modelId + ')\">Remove</button>';\r\n    }\r\n    HTML += '</td></tr>';\r\n    return HTML;\r\n  } \r\n\r\n  private getModelStatsHTML(unit, model) {\r\n    let html = '';\r\n    html += '<tr>'\r\n      + '<td class=\"stat\" id=\"name\">' + model.name + '</td>'\r\n      + '<td class=\"stat\" id=\"m\">' + unit.getUnProfiledStats(model.modelInfo.M) + '</td>'\r\n      + '<td class=\"stat\" id=\"ws\">' + unit.getUnProfiledStats(model.modelInfo.WS) + '</td>'\r\n      + '<td class=\"stat\" id=\"bs\">' + unit.getUnProfiledStats(model.modelInfo.BS) + '</td>'\r\n      + '<td class=\"stat\" id=\"s\">' + unit.getUnProfiledStats(model.modelInfo.S) + '</td>'\r\n      + '<td class=\"stat\" id=\"t\">' + unit.getUnProfiledStats(model.modelInfo.T) + '</td>'\r\n      + '<td class=\"stat\" id=\"w\">' + unit.getUnProfiledStats(model.modelInfo.W) + '</td>'\r\n      + '<td class=\"stat\" id=\"a\">' + unit.getUnProfiledStats(model.modelInfo.A) +'</td>'\r\n      + '<td class=\"stat\" id=\"ld\">' + unit.getUnProfiledStats(model.modelInfo.Ld) + '</td>'\r\n      + '<td class=\"stat\" id=\"sv\">' + unit.getUnProfiledStats(model.modelInfo.Sv) + '</td>'\r\n      + '<td></td>'\r\n      + '</tr>';\r\n    return html;\r\n  }\r\n\r\n  private getWeaponsHTML(model, faction) {\r\n    let HTML = '';\r\n    let selectedWeapons: Array<string> = [];\r\n    for (let slot in model.modelInfo.Wargear) {\r\n      let index = model.selectedWeaponConfig[slot] || 0;\r\n      for (let weaponId of model.modelInfo.Wargear[slot][index]) {\r\n        selectedWeapons.push(weaponId);\r\n      }\r\n    }\r\n    // let selectedWeapons = model.modelInfo.Wargear.weapons[model.selectedWeaponConfig];\r\n    for (let weapon of selectedWeapons) {\r\n      let weaponInfo = window.list.data.data[faction].wargear[weapon];\r\n      if (weaponInfo !== undefined) {\r\n        if (weaponInfo.WargearAbility !== undefined) {\r\n          HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"abilities\" colspan=\"9\">' + weaponInfo.WargearAbility + '</td>'\r\n          + '</tr>';\r\n        }\r\n        else if (weaponInfo.profiles === undefined) {\r\n          HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"range\">' + weaponInfo.Range + '</td>'\r\n          + '<td class=\"stat\" id=\"type\">' + weaponInfo.Type + '</td>'\r\n          + '<td class=\"stat\" id=\"s\">' + weaponInfo.S + '</td>'\r\n          + '<td class=\"stat\" id=\"ap\">' + weaponInfo.AP + '</td>'\r\n          + '<td class=\"stat\" id=\"d\">' + weaponInfo.D + '</td>'\r\n          + '<td class=\"stat\" id=\"abilities\" colspan=\"4\">' + weaponInfo.Abilities + '</td>'\r\n          + '</tr>';\r\n        }\r\n        else {\r\n          let desription = weaponInfo.description === undefined ? '' : weaponInfo.description;\r\n          HTML += '<tr class=\"profiledWeapon\">'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"description\" colspan=\"9\">' + desription + '</td>'\r\n          + '</tr>';\r\n          for (let profile in weaponInfo.profiles) {\r\n            let profileInfo = weaponInfo.profiles[profile];\r\n            if (profileInfo !== undefined) {\r\n              HTML += '<tr class=\"profile\">'\r\n              + '<td class=\"stat\" id=\"name\"> - ' + profile + '</td>'\r\n              + '<td class=\"stat\" id=\"range\">' + profileInfo.Range + '</td>'\r\n              + '<td class=\"stat\" id=\"type\">' + profileInfo.Type + '</td>'\r\n              + '<td class=\"stat\" id=\"s\">' + profileInfo.S + '</td>'\r\n              + '<td class=\"stat\" id=\"ap\">' + profileInfo.AP + '</td>'\r\n              + '<td class=\"stat\" id=\"d\">' + profileInfo.D + '</td>'\r\n              + '<td class=\"stat\" id=\"abilities\" colspan=\"4\">' + profileInfo.Abilities + '</td>'\r\n              + '</tr>';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return HTML;\r\n  }\r\n\r\n  private getWeaponLoadoutSelectionHTML(type, id, model) {\r\n    let valueStr = '' + type + '-' + id + '-';\r\n    let HTML = '<tr><td colspan=\"11\">';\r\n    for (let slot in model.modelInfo.Wargear) {    \r\n      let valueId = valueStr + slot + '-';\r\n      let loadoutLength = model.modelInfo.Wargear[slot].length;\r\n      if (loadoutLength > 1) {\r\n        let selected = model.selectedWeaponConfig[slot] || 0;\r\n        HTML += '<select onchange=\"window.list.editor.editLoadout(value);\">';   \r\n        for (let i = 0; i < loadoutLength; i++) {\r\n          let weaponsList = model.modelInfo.Wargear[slot][i];\r\n          let cost = 0;\r\n          for (let weapon = 0; weapon < weaponsList.length; weapon++) {\r\n            cost += window.list.data.data[this.unit.faction].wargear[weaponsList[weapon]].Points;\r\n          }\r\n          if (i == selected) {\r\n            HTML += '<option value=\"' + valueId + i + '\" selected=\"selected\">' + this.formatWeaponsList(model.modelInfo.Wargear[slot][i]) + ' (' + cost + ' pnts)</option>';\r\n          }\r\n          else {     \r\n            HTML += '<option value=\"' + valueId + i + '\">' + this.formatWeaponsList(model.modelInfo.Wargear[slot][i]) + ' (' + cost + ' pnts)</option>';\r\n          }\r\n        }\r\n        HTML += '</select>';\r\n      }\r\n      else {\r\n        let name = this.formatWeaponsList(model.modelInfo.Wargear[slot][0]);\r\n        let cost = 0;\r\n        let weaponsList = model.modelInfo.Wargear[slot][0];\r\n        for (let weapon = 0; weapon < weaponsList.length; weapon++) {\r\n          cost += window.list.data.data[this.unit.faction].wargear[weaponsList[weapon]].Points;\r\n        }\r\n        HTML += '<div class=\"selectSingle\">' + name + ' (' + cost + ' pnts)</div>';\r\n      }\r\n    }\r\n    HTML += '</td></tr>';\r\n    return HTML;\r\n  }\r\n\r\n  private formatWeaponsList(weapons) {\r\n    let formattedList = '';\r\n    for (let i = 0; i < weapons.length; i++) {\r\n      formattedList += weapons[i];\r\n      if (i !== weapons.length - 1) {\r\n        formattedList += ' | ';\r\n      }\r\n    }\r\n    return formattedList;\r\n  }\r\n\r\n  private getAllegianceHTML(unit) {\r\n    let HTML = '';\r\n    for (let modelType in unit.models) {\r\n      if (unit.models[modelType].length > 0) {\r\n        let allegiances = unit.models[modelType][0].modelInfo.Allegiance;\r\n        if (allegiances !== undefined) {\r\n          let selected = unit.models[modelType][0].selectedAllegiance;\r\n          HTML += '<tr><td colspan=\"11\"><select onchange=\"window.list.editor.editAllegiance(value);\">';\r\n          for (let i = 0; i < allegiances.length; i++) {\r\n            if (i == selected) {\r\n              HTML += '<option selected=\"selected\" value=\"' + i + '\">' + allegiances[i] + '</option>';\r\n            }\r\n            else {\r\n              HTML += '<option value=\"' + i + '\">' + allegiances[i] + '</option>';\r\n            }\r\n          }\r\n          HTML += '</select></td></tr>';\r\n          return HTML;\r\n        }\r\n      }\r\n    }\r\n    return HTML;\r\n  }\r\n\r\n  private getSeperatorHTML() {\r\n    return '<tr><td class=\"seperator\" colspan=\"11\"><hr/></td></tr>';\r\n  }\r\n}\r\n","import Data from '../src/data/dataController';\r\nimport Costs from '../src/utils/costController';\r\nimport FactionList from '../src/lists/factionList';\r\nimport UnitList from '../src/lists/unitList';\r\nimport ArmyList from '../src/lists/armyList';\r\nimport Editor from '../src/editor/editor';\r\n\r\nexport default class ListBuilder {\r\n\r\n  public data: Data;\r\n  public costs: Costs;\r\n  public factionList: FactionList;\r\n  public unitList: UnitList;\r\n  public armyList: ArmyList;\r\n  public editor: Editor;\r\n\r\n  constructor() {\r\n    this.costs = new Costs();\r\n    this.factionList = new FactionList();\r\n    this.unitList = new UnitList();\r\n    this.armyList = new ArmyList();\r\n    this.editor = new Editor();\r\n    this.data = new Data(this.setup, this.loadingFailure);\r\n  }\r\n\r\n  public loadFactionData() {\r\n    this.data.loadFactionData();\r\n  }\r\n\r\n  public setup() {\r\n    window.list.costs.init();\r\n    window.list.factionList.init();\r\n  }\r\n\r\n  public loadingFailure() {\r\n    alert('Faction data failed to load :(');\r\n  }\r\n}\r\n\r\nlet list = new ListBuilder();\r\nlist.loadFactionData();\r\n\r\ndeclare global {\r\n  interface Window {\r\n    list: ListBuilder;\r\n  }\r\n}\r\nwindow.list = list;\r\n\r\n/**\r\n * X 1. Load all the supported faction files\r\n * X 2. Create the cost header \r\n * X 3. Create the faction list\r\n * X 4. Create the army list\r\n * X 5.   Create the available unit list\r\n * X 6.   Populate the army list\r\n * 7.   Create the editor\r\n * \r\n * TODOs: \r\n *  - Spells\r\n *  - Strategems\r\n *  - Detachments\r\n *  - Warlord traits\r\n *  - A way to tell which weapon goes with which model in print view\r\n */\r\n","import Unit from '../objects/unit';\r\n\r\nexport default class ArmyList {\r\n\r\n  public listContents: any;\r\n  private currentUnits: number;\r\n\r\n  constructor() {\r\n    this.listContents = {\r\n      \"HQ\": [],\r\n      \"Troops\": [],\r\n      \"Elites\": [],\r\n      \"Fast Attack\": [],\r\n      \"Heavy Support\": [],\r\n      \"Dedicated Transport\": [],\r\n      \"Flyer\": [],\r\n      \"Fortification\": [],\r\n      \"Lord Of War\": []\r\n    };\r\n    this.currentUnits = 0;\r\n  }\r\n\r\n  public addUnit(faction: string, type: string, name: string) {\r\n    this.listContents[type].push(new Unit(this.currentUnits, faction, type, name));\r\n    this.currentUnits++;\r\n    this.updateCosts();\r\n    this.renderList();\r\n  }\r\n\r\n  public removeUnit(id: number) {\r\n    for (let type in this.listContents) {\r\n      let tempArray: Array<any> = [];\r\n      for (let unit in this.listContents[type]) {\r\n        if (this.listContents[type][unit].id !== id) {\r\n          tempArray.push(this.listContents[type][unit]);\r\n        }\r\n      }\r\n      this.listContents[type] = tempArray;\r\n    }\r\n    this.updateCosts();\r\n    this.renderList();\r\n  }\r\n\r\n  public addSmiteSpell() {\r\n    // TODO\r\n  }\r\n\r\n  public addFactionSpells(faction: string, spells: string) {\r\n    // TODO\r\n  }\r\n\r\n  public updateCosts() {\r\n    let power = 0;\r\n    let points= 0;\r\n    let wounds = 0;\r\n    let models = 0;\r\n    for (let type in this.listContents) {\r\n      for (let unit of this.listContents[type]) {\r\n        if (unit !== null) {\r\n          power += unit.totalPower;\r\n          points += unit.totalPoints;\r\n          wounds += unit.totalWounds;\r\n          models += unit.totalModels;\r\n        }\r\n      }\r\n    } \r\n    window.list.costs.updateCostsExt([points, power, wounds, models]);\r\n  }\r\n\r\n  public renderList() {\r\n    let listContainer = (document.getElementById(\"newListContents\") as HTMLElement);\r\n    listContainer.innerHTML = '';\r\n    for (let type in this.listContents) {\r\n      if (this.listContents[type].length > 0) {\r\n        let imageName = this.getImageName(type);\r\n        listContainer.innerHTML += '<div id=\"typeHeader\"><img src=\"/Content/40kListBuilder/resources/icons/' + imageName + '\"/><h1>' + type + '</h1></div>';\r\n      }\r\n      for (let unit = 0; unit < this.listContents[type].length; unit++) {\r\n        if (this.listContents[type][unit] !== null) {\r\n          let unitInfo = this.listContents[type][unit] as Unit;\r\n          let unitTable = document.createElement('table');\r\n          unitTable.className = \"unitTable\";\r\n          unitTable.id = '' + unitInfo.id;\r\n          unitTable.innerHTML += unitInfo.getUnitNameAndCostHTML();\r\n          unitTable.innerHTML += unitInfo.getStatsHeadersHTML();\r\n          unitTable.innerHTML += unitInfo.getStatsHTML();\r\n          unitTable.innerHTML += unitInfo.getWeaponsHeadersHTML();\r\n          unitTable.innerHTML += unitInfo.getWeaponsHTML();\r\n          unitTable.innerHTML += unitInfo.getAbilitiesHTML();\r\n          unitTable.innerHTML += unitInfo.getPsykerHTML();\r\n          unitTable.innerHTML += unitInfo.getAllegianceHTML();\r\n          unitTable.innerHTML += unitInfo.getKeywordsHTML();\r\n          listContainer.appendChild(unitTable);\r\n          listContainer.appendChild(this.getUnitControls(unitInfo.id));\r\n          listContainer.innerHTML += '<div class=\"clear\"</div>';\r\n        }\r\n      }\r\n    }\r\n    let spacer = document.createElement('div');\r\n    spacer.className = \"spacer\";\r\n    listContainer.appendChild(spacer);\r\n  }\r\n\r\n  public getImageName(type: string): string {\r\n    let imageName = '';\r\n    switch (type) {\r\n      case \"HQ\":\r\n        imageName = 'hq.png';\r\n        break;\r\n      case \"Troops\":\r\n        imageName = 'troops.png';\r\n        break;\r\n      case \"Elites\":\r\n        imageName = 'elites.png';\r\n        break;\r\n      case \"Fast Attack\":\r\n        imageName = 'fastattack.png';\r\n        break;\r\n      case \"Heavy Support\":\r\n        imageName = 'heavysupport.png';\r\n        break;\r\n      case \"Dedicated Transport\":\r\n        imageName = 'dedicatedtransport.png';\r\n        break;\r\n      case \"Flyer\":\r\n        imageName = 'flyers.png';\r\n        break;\r\n      case \"Fortification\":\r\n        imageName = 'fortifications.png';\r\n        break;\r\n      case \"Lord Of War\":\r\n        imageName = 'lordofwar.png';\r\n        break;\r\n    }\r\n    return imageName;\r\n  }\r\n\r\n  private getUnitControls(id: number): HTMLElement {\r\n    let controlList = document.createElement('ul');\r\n    controlList.className = \"unitControls\";\r\n\r\n    let deleteBtn = document.createElement('li');\r\n    deleteBtn.className = \"button\";\r\n    deleteBtn.id = 'delete' + id;\r\n    deleteBtn.innerHTML = '<img onclick=\"list.armyList.removeUnit(' + id + ')\" src=\"/Content/40kListBuilder/resources/icons/delete.png\"/>';\r\n    controlList.appendChild(deleteBtn);\r\n\r\n    let editBtn = document.createElement('li');\r\n    editBtn.className = \"button\";\r\n    editBtn.id = 'edit' + id;\r\n    editBtn.innerHTML = '<img onclick=\"list.editor.editUnit(' + id + ')\" src=\"/Content/40kListBuilder/resources/icons/edit.png\"/>';\r\n    controlList.appendChild(editBtn);\r\n\r\n    return controlList;\r\n  }\r\n}\r\n","import Factions from '../data/factions';\r\nimport Settings from '../settings';\r\n\r\nexport default class FactionList {\r\n\r\n  private open: boolean;\r\n  private menuBtn: HTMLElement;\r\n  private factionList: HTMLElement;\r\n\r\n  constructor() {\r\n    this.open = false;\r\n    this.menuBtn = (document.getElementById(\"factionBtn\") as HTMLElement);\r\n    this.factionList = (document.getElementById(\"factionList\") as HTMLElement);\r\n  }\r\n\r\n  public init() {\r\n    this.setupFactionList();\r\n  }\r\n\r\n  private openNav() {\r\n    (document.getElementById(\"sidenav\") as HTMLElement).style.width = \"350px\";\r\n    (document.getElementById(\"availableList\") as HTMLElement).style.marginLeft = \"350px\";\r\n    (document.getElementById(\"newList\") as HTMLElement).style.paddingLeft = \"700px\";\r\n    this.open = true;\r\n  }\r\n\r\n  private closeNav() {\r\n    (document.getElementById(\"sidenav\") as HTMLElement).style.width = \"60px\";\r\n    (document.getElementById(\"availableList\") as HTMLElement).style.marginLeft = \"60px\";\r\n    (document.getElementById(\"newList\") as HTMLElement).style.paddingLeft = \"410px\";\r\n    this.open = false;\r\n  }\r\n\r\n  private toggleNav() {\r\n    if (this.open) {\r\n      this.closeNav();\r\n    }\r\n    else {\r\n      this.openNav();\r\n    }\r\n  }\r\n\r\n  private isOpen() {\r\n    return this.open;\r\n  }\r\n\r\n  private setupFactionList() {\r\n    this.menuBtn.onclick = () => { this.toggleNav(); };\r\n    if (!this.isOpen()) {\r\n      this.openNav();\r\n    }\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) !== -1) {\r\n        this.factionList.appendChild(this.createFactionListElement(faction, true));\r\n      }\r\n    }\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) === -1) {\r\n        this.factionList.appendChild(this.createFactionListElement(faction, false));\r\n      }\r\n    }\r\n  }\r\n\r\n  private createFactionListElement(faction: string, supported: boolean): HTMLElement {\r\n    let listItem = document.createElement('li');\r\n    listItem.id = faction;\r\n    if (!supported) {\r\n      listItem.className = \"factionNotSupported\";\r\n    }\r\n    listItem.onclick = () => { this.factionSelected(faction); };\r\n    listItem.innerHTML = '<img src=\"/Content/40kListBuilder/resources/icons/' + Factions[faction].icon + '\"/>' + faction;\r\n    return listItem;\r\n  }\r\n\r\n  private factionSelected(faction: string) {\r\n    window.list.unitList.factionSelected(faction);\r\n    if (this.isOpen()) {\r\n      this.closeNav();\r\n    }\r\n  }\r\n}\r\n","import AvailableUnit from \"../objects/availableUnit\";\r\n\r\nexport default class UnitList {\r\n\r\n  private currentFaction: string;\r\n  private availableList: Array<AvailableUnit>;\r\n\r\n  constructor() {\r\n    this.currentFaction = '';\r\n    this.availableList = [];\r\n  }\r\n\r\n  public factionSelected(faction: string) {\r\n    this.availableList = [];\r\n    this.currentFaction = faction;\r\n    let factionData = window.list.data.data[faction];\r\n    for (let type in factionData.units) {\r\n      let units = factionData.units[type];\r\n      for (let unit in units) {\r\n        this.availableList.push(new AvailableUnit(faction, type, unit));\r\n      }\r\n    }\r\n    this.renderList();\r\n  }\r\n\r\n  private renderList() {\r\n    let availableListHTML = (document.getElementById(\"availableList\") as HTMLElement);\r\n    availableListHTML.innerHTML = '<h2>' + this.currentFaction + '</h2>';\r\n\r\n    let containingList = document.createElement('ul');\r\n    let typeList = document.createElement('ul');\r\n    let currentType = \"\";\r\n    let listItem = document.createElement('li');\r\n\r\n    for (let unit of this.availableList) {\r\n      if (unit.type !== currentType) {\r\n        if (currentType !== \"\") {\r\n          containingList.appendChild(typeList);\r\n          typeList = document.createElement('ul');\r\n        }\r\n        typeList.innerHTML = unit.type + '<hr/>';\r\n        currentType = unit.type;\r\n      }    \r\n      listItem = document.createElement('li');\r\n      listItem.onclick = () => {\r\n        window.list.armyList.addUnit(unit.faction, unit.type, unit.name);\r\n      };\r\n      listItem.innerHTML = unit.name\r\n        + '<br/><div id=\"unitDetails\"><table><tr><td>Points: ' \r\n        + unit.points\r\n        + '</td><td>Power: '\r\n        + unit.power\r\n        + '</td><td>Wounds: '\r\n        + unit.wounds\r\n        + '</td><td>Models: '\r\n        + unit.models\r\n        + '</td></tr></table></div>';\r\n      typeList.appendChild(listItem);\r\n    }\r\n    containingList.appendChild(typeList);\r\n    \r\n    if (window.list.data.data[this.currentFaction].spells !== undefined) {\r\n      let spellsList = document.createElement('ul');\r\n      spellsList.innerHTML = 'Spells<hr/>';\r\n\r\n      let smite = document.createElement('li');\r\n      smite.id = \"smite\";\r\n      smite.onclick = () => {\r\n        window.list.armyList.addSmiteSpell();\r\n      };\r\n      smite.innerHTML = \"Smite\";\r\n      spellsList.appendChild(smite);\r\n\r\n      for (let spellType in window.list.data.data[this.currentFaction].spells) {\r\n        let id = this.currentFaction + '-' + spellType;\r\n        let spellItem = document.createElement('li');\r\n        spellItem.id = id;\r\n        spellItem.onclick = () => {\r\n          window.list.armyList.addFactionSpells(this.currentFaction, spellType);\r\n        };\r\n        spellItem.innerHTML = spellType;\r\n        spellsList.appendChild(spellItem);\r\n      }\r\n      containingList.appendChild(spellsList);\r\n    }\r\n\r\n    availableListHTML.appendChild(containingList);\r\n\r\n    let spacer = document.createElement('div');\r\n    spacer.className = \"spacer\";\r\n    availableListHTML.appendChild(spacer);\r\n  }\r\n}\r\n","export default class AvailableUnit {\r\n\r\n  public faction: string;\r\n  public type: string;\r\n  public name: string;\r\n  public unitInfo: any;\r\n  public points: number;\r\n  public power: number;\r\n  public wounds: number;\r\n  public models: number;\r\n\r\n  constructor(faction: string, type: string, unit: string) {\r\n    this.faction = faction;\r\n    this.type = type;\r\n    this.name = unit;\r\n    this.unitInfo = window.list.data.data[faction].units[type][unit];\r\n    this.points = this.getPointsValue();\r\n    this.power = this.getPowerValue();\r\n    this.wounds = this.getWoundsValue();\r\n    this.models = this.getModelsValue();\r\n  }\r\n\r\n  public getPointsValue() {\r\n    let points = 0;\r\n    for (let modelType of this.unitInfo.modelTypes) {\r\n      let modelPoints = 0;\r\n      let model = window.list.data.data[this.faction].models[modelType.model];\r\n      modelPoints += model.Points;  \r\n      if (!model.PointsIncludesWargear) {\r\n        for (let slot in model.Wargear) {\r\n          for (let weapon = 0; weapon < model.Wargear[slot][0].length; weapon++) {\r\n            modelPoints += window.list.data.data[this.faction].wargear[model.Wargear[slot][0][weapon]].Points;\r\n          } \r\n        }\r\n      }\r\n      points += (modelPoints * modelType.defaultAmount);\r\n    }\r\n    return points;\r\n  }\r\n\r\n  public getPowerValue() {\r\n    let power = 0;\r\n    power += this.unitInfo.power[0][1];\r\n    return power;\r\n  }\r\n\r\n  public getWoundsValue() {\r\n    let wounds = 0;\r\n    for (let modelType of this.unitInfo.modelTypes) {\r\n      let model = window.list.data.data[this.faction].models[modelType.model];\r\n      wounds += (model.W * modelType.defaultAmount); \r\n    }\r\n    return wounds;\r\n  }\r\n\r\n  public getModelsValue() {\r\n    let models = 0;\r\n    for (let modelType of this.unitInfo.modelTypes) {\r\n      models += modelType.defaultAmount;\r\n    }\r\n    return models;\r\n  }\r\n}\r\n","export default class Model {\r\n\r\n  public name: string;\r\n  public modelInfo: any;\r\n  public points: number;\r\n  public selectedWeaponConfig: any; // TODO - multiple slots\r\n  public selectedAllegiance: number;\r\n\r\n  constructor(name: string, modelInfo: any) {\r\n    this.name = name;\r\n    this.modelInfo = modelInfo;\r\n    this.points = modelInfo.Points;\r\n    this.selectedWeaponConfig = {};\r\n    this.selectedAllegiance = 0;\r\n  }\r\n}\r\n","import Model from '../objects/model';\r\n\r\nexport default class Unit {\r\n\r\n  public id: number;\r\n  public faction: string;\r\n  public type: string;\r\n  public name: string;\r\n\r\n  public totalModels: number;\r\n  public totalPoints: number;\r\n  public totalPower: number;\r\n  public totalWounds: number;\r\n\r\n  public unitInfo: any;\r\n  public models: any;\r\n\r\n  constructor(unitId: number, faction: string, type: string, name: string) {\r\n    this.id = unitId;\r\n    this.faction = faction;\r\n    this.type = type;\r\n    this.name = name;\r\n\r\n    this.totalModels = 0;\r\n    this.totalPoints = 0;\r\n    this.totalPower = 0;\r\n    this.totalWounds = 0;\r\n\r\n    this.unitInfo = window.list.data.data[faction].units[type][name];\r\n    this.models = {};\r\n\r\n    this.setupDefaultModels();\r\n    this.updateCosts();\r\n  }\r\n\r\n  public getUnitNameAndCostHTML(): string {\r\n    let costHTML =  'Points: ' + this.totalPoints\r\n                 +  ' | Power: ' + this.totalPower\r\n                 +  ' | Wounds: ' + this.totalWounds\r\n                 +  ' | Models: ' + this.totalModels;\r\n    let HTML = '<tr>'\r\n      + '<td class=\"name\" colspan=\"5\">' + this.name + '</td>'\r\n      + '<td class=\"cost\" colspan=\"5\">' + costHTML + '</td>'\r\n      + '</tr>';\r\n    \r\n    return HTML;\r\n  }\r\n\r\n  public getStatsHeadersHTML(): string {\r\n    let HTML = '<tr>'\r\n        + '<th class=\"statHeader\" id=\"name_H\">Name</th>'\r\n        + '<th class=\"statHeader\" id=\"m_H\">M</th>'\r\n        + '<th class=\"statHeader\" id=\"ws_H\">WS</th>'\r\n        + '<th class=\"statHeader\" id=\"bs_H\">BS</th>'\r\n        + '<th class=\"statHeader\" id=\"s_H\">S</th>'\r\n        + '<th class=\"statHeader\" id=\"t_H\">T</th>'\r\n        + '<th class=\"statHeader\" id=\"w_H\">W</th>'\r\n        + '<th class=\"statHeader\" id=\"a_H\">A</th>'\r\n        + '<th class=\"statHeader\" id=\"ld_H\">Ld</th>'\r\n        + '<th class=\"statHeader\" id=\"sv_H\">Sv</th>'\r\n        + '</tr>';\r\n    return HTML;\r\n  }\r\n\r\n  public getStatsHTML(): string {\r\n    let HTML = '';\r\n    for (let modelType in this.models) {\r\n      if (this.models[modelType].length > 0) {\r\n        let model = this.models[modelType][0];\r\n        let modelNumStr = '';\r\n        if (this.models[modelType].length > 1) {\r\n          modelNumStr = ' (' + this.models[modelType].length +')';\r\n        }\r\n        HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + model.name + modelNumStr + '</td>'\r\n          + '<td class=\"stat\" id=\"m\">' + this.getUnProfiledStats(model.modelInfo.M) + '</td>'\r\n          + '<td class=\"stat\" id=\"ws\">' + this.getUnProfiledStats(model.modelInfo.WS) + '</td>'\r\n          + '<td class=\"stat\" id=\"bs\">' + this.getUnProfiledStats(model.modelInfo.BS) + '</td>'\r\n          + '<td class=\"stat\" id=\"s\">' + this.getUnProfiledStats(model.modelInfo.S) + '</td>'\r\n          + '<td class=\"stat\" id=\"t\">' + this.getUnProfiledStats(model.modelInfo.T) + '</td>'\r\n          + '<td class=\"stat\" id=\"w\">' + this.getUnProfiledStats(model.modelInfo.W) + '</td>'\r\n          + '<td class=\"stat\" id=\"a\">' + this.getUnProfiledStats(model.modelInfo.A) +'</td>'\r\n          + '<td class=\"stat\" id=\"ld\">' + this.getUnProfiledStats(model.modelInfo.Ld) + '</td>'\r\n          + '<td class=\"stat\" id=\"sv\">' + this.getUnProfiledStats(model.modelInfo.Sv) + '</td>'\r\n          + '</tr>';\r\n      }\r\n    }\r\n    return HTML;\r\n  }\r\n\r\n  public getUnProfiledStats(stat: any) {\r\n    if (typeof stat === \"string\" || typeof stat === \"number\") {\r\n      return stat;\r\n    }\r\n    else {\r\n      let stats = '';\r\n      for (let i = 0; i < stat.length; i++) {\r\n        stats += '<b>' + stat[i].value + '</b> (' + stat[i].Wounds[0] + '-' + stat[i].Wounds[1] + ')<br/>';\r\n      }\r\n      return stats;\r\n    }\r\n  }\r\n\r\n  public getWeaponsHeadersHTML(): string {\r\n    let HTML = '<tr>'\r\n        + '<th class=\"leftHeader\">Weapon</th>'\r\n        + '<th>Range</th>'\r\n        + '<th>Type</th>'\r\n        + '<th>S</th>'\r\n        + '<th>AP</th>'\r\n        + '<th>D</th>'\r\n        + '<th colspan=\"4\">Abilities</th>'\r\n        + '</tr>';\r\n    return HTML;\r\n  }\r\n\r\n  public getWeaponsHTML(): string {\r\n    let listOfWeapons: Array<string> = [];\r\n    let amountsPerWeapon: Array<number> = [];\r\n    let HTML = '';\r\n    for (let modelType in this.models) {\r\n      for (let i = 0; i < this.models[modelType].length; i++) {\r\n        let weapons: Array<string> = [];\r\n        let wargear = this.models[modelType][i].modelInfo.Wargear;\r\n        for (let slot in wargear) {\r\n          let selectedIndex = this.models[modelType][i].selectedWeaponConfig[slot] || 0;\r\n          for (let weaponId of wargear[slot][selectedIndex]) {\r\n            weapons.push(weaponId);\r\n          }\r\n        }\r\n        for (let weapon in weapons) {\r\n          if (listOfWeapons.indexOf(weapons[weapon]) === -1) {\r\n            listOfWeapons.push(weapons[weapon]);\r\n            amountsPerWeapon.push(1);\r\n          }\r\n          else {\r\n            amountsPerWeapon[listOfWeapons.indexOf(weapons[weapon])]++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let weaponIndex in listOfWeapons) {\r\n      let weapon = listOfWeapons[weaponIndex];\r\n      let weaponInfo = window.list.data.data[this.faction].wargear[weapon];\r\n      let numberOf = '';\r\n      if (amountsPerWeapon[weaponIndex] > 1) {\r\n        numberOf = ' (' + amountsPerWeapon[weaponIndex] +')';\r\n      }\r\n      if (weaponInfo !== undefined) {\r\n        if (weaponInfo.WargearAbility !== undefined) {\r\n          HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"abilities\" colspan=\"9\">' + weaponInfo.WargearAbility + '</td>'\r\n          + '</tr>';\r\n        }\r\n        else if (weaponInfo.profiles === undefined) {\r\n          HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + numberOf +'</td>'\r\n          + '<td class=\"stat\" id=\"range\">' + weaponInfo.Range + '</td>'\r\n          + '<td class=\"stat\" id=\"type\">' + weaponInfo.Type + '</td>'\r\n          + '<td class=\"stat\" id=\"s\">' + weaponInfo.S + '</td>'\r\n          + '<td class=\"stat\" id=\"ap\">' + weaponInfo.AP + '</td>'\r\n          + '<td class=\"stat\" id=\"d\">' + weaponInfo.D + '</td>'\r\n          + '<td class=\"stat\" id=\"abilities\" colspan=\"4\">' + weaponInfo.Abilities + '</td>'\r\n          + '</tr>';\r\n        }\r\n        else {\r\n          let desription = weaponInfo.description === undefined ? '' : weaponInfo.description;\r\n          HTML += '<tr class=\"profiledWeapon\">'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"description\" colspan=\"9\">' + desription + '</td>'\r\n          + '</tr>';\r\n          for (let profile in weaponInfo.profiles) {\r\n            let profileInfo = weaponInfo.profiles[profile];\r\n            if (profileInfo !== undefined) {\r\n              HTML += '<tr class=\"profile\">'\r\n              + '<td class=\"stat\" id=\"name\"> - ' + profile + '</td>'\r\n              + '<td class=\"stat\" id=\"range\">' + profileInfo.Range + '</td>'\r\n              + '<td class=\"stat\" id=\"type\">' + profileInfo.Type + '</td>'\r\n              + '<td class=\"stat\" id=\"s\">' + profileInfo.S + '</td>'\r\n              + '<td class=\"stat\" id=\"ap\">' + profileInfo.AP + '</td>'\r\n              + '<td class=\"stat\" id=\"d\">' + profileInfo.D + '</td>'\r\n              + '<td class=\"stat\" id=\"abilities\" colspan=\"4\">' + profileInfo.Abilities + '</td>'\r\n              + '</tr>';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return HTML;\r\n  }\r\n\r\n  public getAbilitiesHTML(): string {\r\n    let abilityHTML = '<tr class=\"abilities\"><th>Abilities</th><td colspan=\"9\">';\r\n    let abilityList: Array<any> = [];\r\n    for (let modelType in this.models) {\r\n      for (let i = 0; i < this.models[modelType].length; i++) {\r\n        let abilities = this.models[modelType][i].modelInfo.Abilities;\r\n        for (let ability in abilities) {\r\n          if (typeof abilities[ability] !== \"string\") {\r\n            for (let factionAbility in abilities[ability]) {\r\n              let htmlString = this.getFactionAbility(factionAbility);\r\n              if (abilityList.indexOf(htmlString) === -1) {\r\n                abilityList.push(htmlString);\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            let htmlString = '<b>' + ability + ':</b> ' + this.models[modelType][i].modelInfo.Abilities[ability] + '<br/>';\r\n            if (abilityList.indexOf(htmlString) === -1) {\r\n              abilityList.push(htmlString);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < abilityList.length; i++) {\r\n      abilityHTML += abilityList[i];\r\n      if (i < abilityList.length - 1) {\r\n        abilityHTML += '<br/>';\r\n      }\r\n    }\r\n    abilityHTML += '</td></tr>';\r\n    return abilityHTML;\r\n  }\r\n\r\n  public getFactionAbility(id: number | string) {\r\n    return '<b>' + window.list.data.data[this.faction].factionSpecialRules[id].name + '</b>: '\r\n    + window.list.data.data[this.faction].factionSpecialRules[id].description + '<br/>';\r\n  }\r\n\r\n  public getPsykerHTML(): string {\r\n    let psykerHTML = '';\r\n    for (let modelType in this.models) {\r\n      if (this.models[modelType].length > 0 && this.models[modelType][0].modelInfo.Psyker !== undefined) {\r\n        psykerHTML += '<tr class=\"psykerAbilities\"><th>Psyker</th>'\r\n          + '<td colspan=\"9\">' + this.models[modelType][0].modelInfo.Psyker\r\n          + '</td></tr>';\r\n      }\r\n    }\r\n    return psykerHTML;\r\n  }\r\n\r\n  public getAllegianceHTML(): string {\r\n    let allegianceHTML = '';\r\n    for (let modelType in this.models) {\r\n      if (this.models[modelType].length > 0) {\r\n        if (this.models[modelType][0].modelInfo.Allegiance !== undefined) {\r\n          allegianceHTML += '<tr class=\"allegiance\"><th>Allegiance</th><td colspan=\"9\">' + this.models[modelType][0].modelInfo.Allegiance[this.models[modelType][0].selectedAllegiance] + '</td></tr>';\r\n          return allegianceHTML;\r\n        }\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public getKeywordsHTML(): string {\r\n    let keywords: Array<any> = [];\r\n    for (let modelType in this.models) {\r\n      if (this.models[modelType].length > 0) {\r\n        for (let i = 0; i < this.models[modelType][0].modelInfo[\"Faction Keywords\"].length; i++) {\r\n          let keyword = this.models[modelType][0].modelInfo[\"Faction Keywords\"][i].toUpperCase();\r\n          if (keywords.indexOf(keyword) === -1) {\r\n            keywords.push(keyword);\r\n          }\r\n        }\r\n        for (let i = 0; i < this.models[modelType][0].modelInfo.Keywords.length; i++) {\r\n          let keyword = this.models[modelType][0].modelInfo.Keywords[i].toUpperCase();\r\n          if (keywords.indexOf(keyword) === -1) {\r\n            keywords.push(keyword);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let keywordHTML = '<tr class=\"keywords\"><th>Keywords</th><td colspan=\"9\">';\r\n    for (let keyword of keywords) {\r\n      if (keywords.indexOf(keyword) < keywords.length - 1) {\r\n        keywordHTML += keyword + ', ';\r\n      }\r\n      else {\r\n        keywordHTML += keyword;\r\n      }\r\n    }\r\n    keywordHTML += '</td></tr>';\r\n    return keywordHTML;\r\n  }\r\n\r\n  public updateCosts() {\r\n    this.calculateModels();\r\n    this.calculateWounds();\r\n    this.calculatePoints();\r\n    this.calculatePower();\r\n  }\r\n\r\n  public addModel(modelType) {\r\n    let model = this.unitInfo.modelTypes[modelType].model;\r\n    let modelInfo = window.list.data.data[this.faction].models[model];\r\n    if (modelInfo !== undefined) {\r\n      let newModel = new Model(model, modelInfo);\r\n      this.models[model].push(newModel);\r\n    }\r\n    this.updateCosts();\r\n    window.list.armyList.updateCosts();\r\n    window.list.editor.renderEdit();\r\n  }\r\n\r\n  public removeModel(modelType) {\r\n    let model = this.unitInfo.modelTypes[modelType].model;\r\n    if (this.models[model].length > 1) {\r\n      this.models[model].pop();\r\n    }\r\n    else {\r\n      this.models[model] = [];\r\n    }\r\n    this.updateCosts();\r\n    window.list.armyList.updateCosts();\r\n    window.list.editor.renderEdit();\r\n  }\r\n\r\n  public updateModelWargear(modelType, modelIndex, weaponSlot, selectedWeaponConfig) {\r\n    let model = this.unitInfo.modelTypes[modelType].model;\r\n    this.models[model][modelIndex].selectedWeaponConfig[weaponSlot] = selectedWeaponConfig;\r\n    this.updateCosts();\r\n    window.list.armyList.updateCosts();\r\n    window.list.editor.renderEdit();\r\n  }\r\n\r\n  public updateAllegiance(index: number) {\r\n    for (let modelType in this.models) {\r\n      for (let modelIndex in this.models[modelType]) {\r\n        let model = this.models[modelType][modelIndex];\r\n        model.selectedAllegiance = index;\r\n      }\r\n    }\r\n  }\r\n\r\n  private calculateModels() {\r\n    let models = 0;\r\n    for (let modelType in this.models) {\r\n      models += this.models[modelType].length;\r\n    }\r\n    this.totalModels = models;\r\n  }\r\n\r\n  private calculateWounds() {\r\n    let wounds = 0;\r\n    for (let modelType in this.models) {\r\n      for (let modelIndex in this.models[modelType]) {\r\n        wounds += this.models[modelType][modelIndex].modelInfo.W;\r\n      }\r\n    }\r\n    this.totalWounds = wounds;\r\n  }\r\n\r\n  private calculatePoints() {\r\n    let points = 0;\r\n    for (let modelType in this.models) {\r\n      for (let modelIndex in this.models[modelType]) {\r\n        let model = this.models[modelType][modelIndex];\r\n        points += model.modelInfo.Points;\r\n        if (!model.modelInfo.PointsIncludesWargear) {\r\n          for (let slot in model.modelInfo.Wargear) {\r\n            let index = model.selectedWeaponConfig[slot] || 0;\r\n            let selectedWeapons = model.modelInfo.Wargear[slot][index];\r\n            for (let weapon = 0; weapon < selectedWeapons.length; weapon++) {\r\n              points += window.list.data.data[this.faction].wargear[selectedWeapons[weapon]].Points;\r\n            } \r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.totalPoints = points;\r\n  }\r\n\r\n  private calculatePower() {\r\n    let power = 0;\r\n    for (let i = this.unitInfo.power.length - 1; i >= 0; i--) {\r\n      if (this.totalModels >= this.unitInfo.power[i][0]) {\r\n        power = this.unitInfo.power[i][1];\r\n        break;\r\n      }\r\n    }\r\n    this.totalPower = power;\r\n  }\r\n\r\n  private setupDefaultModels() {\r\n    for (let modelType in this.unitInfo.modelTypes) {\r\n      let model = this.unitInfo.modelTypes[modelType].model;\r\n      this.models[model] = [];\r\n      let modelInfo = window.list.data.data[this.faction].models[model];\r\n      if (modelInfo !== undefined) {\r\n        for (let num = 0; num < this.unitInfo.modelTypes[modelType].defaultAmount; num++) {\r\n          let newModel = new Model(model, modelInfo);\r\n          this.models[model].push(newModel);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","let Settings = {\r\n  supportedFactions: [\r\n    'Craftworlds',\r\n    'Harlequins',\r\n    'Ynnari'\r\n  ]\r\n};\r\n\r\nexport default Settings;\r\n","export default class Costs {\r\n\r\n  // cost values\r\n  public costs: Array<number>;\r\n\r\n  // elements\r\n  private pointsElement: HTMLElement;\r\n  private powerElement: HTMLElement;\r\n  private woundsElement: HTMLElement;\r\n  private modelsElement: HTMLElement;\r\n\r\n  constructor() {\r\n    this.costs = [0,0,0,0];\r\n    this.pointsElement = document.getElementById(\"POINTS\") as HTMLElement;\r\n    this.powerElement = document.getElementById(\"POWER\") as HTMLElement;\r\n    this.woundsElement = document.getElementById(\"WOUNDS\") as HTMLElement;\r\n    this.modelsElement = document.getElementById(\"MODELS\") as HTMLElement;\r\n  }\r\n\r\n  public init() {\r\n    this.updateCosts();\r\n  }\r\n\r\n  public updateCostsExt(costs: Array<number>) {\r\n    this.costs[0] = costs[0];\r\n    this.costs[1] = costs[1];\r\n    this.costs[2] = costs[2];\r\n    this.costs[3] = costs[3];\r\n    this.updateCosts();\r\n  }\r\n\r\n  private updateCosts() {\r\n    this.pointsElement.innerHTML = '<div class=\"costValue\">' + this.costs[0] + '</div>' + 'POINTS';\r\n    this.powerElement.innerHTML = '<div class=\"displayedCostSmall\">Power: ' + this.costs[1] + '</div>';\r\n    this.woundsElement.innerHTML = '<div class=\"displayedCostSmall\">Wounds: ' + this.costs[2] + '</div>';\r\n    this.modelsElement.innerHTML = '<div class=\"displayedCostSmall\">Models: ' + this.costs[3] + '</div>';\r\n  }\r\n}\r\n"]}