{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/data/dataController.ts","src/data/factions.ts","src/editor/editor.ts","src/init.ts","src/lists/armyList.ts","src/lists/factionList.ts","src/lists/unitList.ts","src/settings.ts","src/utils/costController.ts"],"names":["f","exports","module","define","amd","window","global","self","this","listbuilder","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","factions_1","__importDefault","settings_1","Data","success","failure","filesLoaded","data","prototype","loadFactionData","_this","faction","default","supportedFactions","indexOf","json_1","dataFile","request_1","XMLHttpRequest","onload","onFileLoaded","JSON","parse","response","onerror","onFileFailed","open","send","name","jsonData","Adeptus Mechanicus","icon","Astra Militarum","Blood Angels","Chaos Daemons","Craftworlds","Dark Angels","Deathwatch","Drukhari","Genestealer Cults","Grey Knights","Harlequins","Heretic Astartes","Imperial Agents","Imperial Knights","Legion of the Damned","Necrons","Orks","Questor Traitoris","Space Marines","Space Wolves","T'au Empire","Talons of the Emporer","Tyranids","Ynnari","Editor","dataController_1","costController_1","factionList_1","unitList_1","armyList_1","editor_1","ListBuilder","setup","loadingFailure","costs","factionList","unitList","armyList","editor","alert","ArmyList","FactionList","menuBtn","document","getElementById","setupFactionList","openNav","style","width","marginLeft","paddingLeft","closeNav","toggleNav","isOpen","onclick","appendChild","createFactionListElement","supported","listItem","createElement","id","className","innerHTML","UnitList","Costs","pointsElement","powerElement","woundsElement","modelsElement","updateCosts"],"mappings":"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","file":"listbuilder.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","import Factions from '../data/factions';\r\nimport Settings from '../settings';\r\n\r\ninterface DataCollection {\r\n  [key: string]: any;\r\n}\r\n\r\nexport default class Data {\r\n\r\n  public data: DataCollection;\r\n  private filesLoaded: number;\r\n  private success: Function;\r\n  private failure: Function;\r\n\r\n  constructor(success: Function, failure: Function) {\r\n    this.filesLoaded = 0;\r\n    this.success = success;\r\n    this.failure = failure;\r\n    this.data = {};\r\n  }\r\n\r\n  public loadFactionData() {\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) > -1) {\r\n        let json = Factions[faction].dataFile;\r\n        let request = new XMLHttpRequest();\r\n        request.onload = () => {\r\n          this.onFileLoaded(json, JSON.parse(request.response));\r\n        };\r\n        request.onerror = () => {\r\n          this.onFileFailed();\r\n        };\r\n        request.open('get', '/Content/40kListBuilder/resources/data/' + json);\r\n        request.send();\r\n      }\r\n    }\r\n  }\r\n\r\n  private onFileLoaded(name: string, jsonData: Object) {\r\n    this.filesLoaded++;\r\n    this.data[name] = jsonData;\r\n    if (this.filesLoaded === Settings.supportedFactions.length) {\r\n      this.success();\r\n    }\r\n  }\r\n\r\n  private onFileFailed() {\r\n    this.failure();\r\n  }\r\n}\r\n","// TODO: should just be a list of names, icons, and file locations\r\n\r\nlet factions = {\r\n  \"Adeptus Mechanicus\": {\r\n    \"dataFile\": \"AdeptusMechanicus.json\",\r\n    \"icon\": \"adeptusmechanicus.png\"\r\n  },\r\n  \"Astra Militarum\": {\r\n    \"dataFile\": \"AstraMilitarum.json\",\r\n    \"icon\": \"astramilitarum.png\"\r\n  },\r\n  \"Blood Angels\": {\r\n    \"dataFile\": \"BloodAngles.json\",\r\n    \"icon\": \"bloodangels.png\"\r\n  },\r\n  \"Chaos Daemons\": {\r\n    \"dataFile\": \"Chaosaemons.json\",\r\n    \"icon\": \"chaosdaemons.png\"\r\n  },\r\n  \"Craftworlds\": {\r\n    \"dataFile\": \"Craftworlds.json\",\r\n    \"icon\": \"craftworld.png\"\r\n  },\r\n  \"Dark Angels\": {\r\n    \"dataFile\": \"DarkAngles.json\",\r\n    \"icon\": \"darkangels.png\"\r\n  },\r\n  \"Deathwatch\": {\r\n    \"dataFile\": \"Deathwatch.json\",\r\n    \"icon\": \"deathwatch.png\"\r\n  },\r\n  \"Drukhari\": {\r\n    \"dataFile\": \"Drukhari.json\",\r\n    \"icon\": \"drukhari.png\"\r\n  },\r\n  \"Genestealer Cults\": {\r\n    \"dataFile\": \"GenestealerCults.json\",\r\n    \"icon\": \"genestealers.png\"\r\n  },\r\n  \"Grey Knights\": {\r\n    \"dataFile\": \"GreyKnights.json\",\r\n    \"icon\": \"greyknights.png\"\r\n  },\r\n  \"Harlequins\": {\r\n    \"dataFile\": \"Harlequins.json\",\r\n    \"icon\": \"harlequins.png\"\r\n  },\r\n  \"Heretic Astartes\": {\r\n    \"dataFile\": \"HereticAstartes.json\",\r\n    \"icon\": \"hereticastartes.png\"\r\n  },\r\n  \"Imperial Agents\": {\r\n    \"dataFile\": \"ImperialAgents.json\",\r\n    \"icon\": \"imperialagents.png\"\r\n  },\r\n  \"Imperial Knights\": {\r\n    \"dataFile\": \"ImperialKnights.json\",\r\n    \"icon\": \"imperialknights.png\"\r\n  },\r\n  \"Legion of the Damned\": {\r\n    \"dataFile\": \"LegionOfTheDamned.json\",\r\n    \"icon\": \"legionofthedamned.png\"\r\n  },\r\n  \"Necrons\": {\r\n    \"dataFile\": \"Necrons.json\",\r\n    \"icon\": \"necrons.png\"\r\n  },\r\n  \"Orks\": {\r\n    \"dataFile\": \"Orks.json\",\r\n    \"icon\": \"orks.png\"\r\n  },\r\n  \"Questor Traitoris\": {\r\n    \"dataFile\": \"QuestorTraitoris.json\",\r\n    \"icon\": \"questortraitoris.png\"\r\n  },\r\n  \"Space Marines\": {\r\n    \"dataFile\": \"SpaceMarines.json\",\r\n    \"icon\": \"spacemarines.png\"\r\n  },\r\n  \"Space Wolves\": {\r\n    \"dataFile\": \"SpaceWolves.json\",\r\n    \"icon\": \"spacewolves.png\"\r\n  },\r\n  \"T'au Empire\": {\r\n    \"dataFile\": \"TauEmpire.json\",\r\n    \"icon\": \"tau.png\"\r\n  },\r\n  \"Talons of the Emporer\": {\r\n    \"dataFile\": \"TalonsOfTheEmporer.json\",\r\n    \"icon\": \"talonsoftheemperor.png\"\r\n  },\r\n  \"Tyranids\": {\r\n    \"dataFile\": \"Tyranids.json\",\r\n    \"icon\": \"tyranids.png\"\r\n  },\r\n  \"Ynnari\": {\r\n    \"dataFile\": \"Ynnari.json\",\r\n    \"icon\": \"ynnari.png\"\r\n  }\r\n};\r\n\r\nexport default factions;\r\n","export default class Editor {\r\n\r\n}\r\n","import Data from '../src/data/dataController';\r\nimport Costs from '../src/utils/costController';\r\nimport FactionList from '../src/lists/factionList';\r\nimport UnitList from '../src/lists/unitList';\r\nimport ArmyList from '../src/lists/armyList';\r\nimport Editor from '../src/editor/editor';\r\n\r\nexport default class ListBuilder {\r\n\r\n  public static data: Data;\r\n  public static costs: Costs;\r\n  public static factionList: FactionList;\r\n  public static unitList: UnitList;\r\n  public static armyList: ArmyList;\r\n  public static editor: Editor;\r\n\r\n  constructor() {\r\n    ListBuilder.data = new Data(this.setup, this.loadingFailure);\r\n  }\r\n\r\n  public loadFactionData() {\r\n    ListBuilder.data.loadFactionData();\r\n  }\r\n\r\n  public setup() {\r\n    ListBuilder.costs = new Costs();\r\n    ListBuilder.factionList = new FactionList();\r\n    ListBuilder.unitList = new UnitList();\r\n    ListBuilder.armyList = new ArmyList();\r\n    ListBuilder.editor = new Editor();\r\n  }\r\n\r\n  public loadingFailure() {\r\n    alert('Faction data failed to load :(');\r\n  }\r\n}\r\n\r\nlet list = new ListBuilder();\r\nlist.loadFactionData();\r\n\r\n/**\r\n * X 1. Load all the supported faction files\r\n * X 2. Create the cost header \r\n * 3. Create the faction list\r\n * 4. Create the army list\r\n * 5.   Create the available unit list\r\n * 6.   Populate the army list\r\n * 7.   Create the editor\r\n * \r\n * TODOs: \r\n *  - Spells\r\n *  - Strategems\r\n *  - Detachments\r\n *  - Warlord traits\r\n *  - A way to tell which weapon goes with which model in print view\r\n */\r\n","export default class ArmyList {\r\n\r\n}\r\n","import Factions from '../data/factions';\r\nimport Settings from '../settings';\r\nimport ListBuilder from '../init';\r\n\r\nexport default class FactionList {\r\n\r\n  private open: boolean;\r\n  private menuBtn: HTMLElement;\r\n  private factionList: HTMLElement;\r\n\r\n  constructor() {\r\n    this.open = false;\r\n    this.menuBtn = (document.getElementById(\"factionBtn\") as HTMLElement);\r\n    this.factionList = (document.getElementById(\"factionList\") as HTMLElement);\r\n    this.setupFactionList();\r\n  }\r\n\r\n  public openNav() {\r\n    (document.getElementById(\"sidenav\") as HTMLElement).style.width = \"350px\";\r\n    (document.getElementById(\"availableList\") as HTMLElement).style.marginLeft = \"350px\";\r\n    (document.getElementById(\"newList\") as HTMLElement).style.paddingLeft = \"700px\";\r\n  }\r\n\r\n  public closeNav() {\r\n    (document.getElementById(\"sidenav\") as HTMLElement).style.width = \"60px\";\r\n    (document.getElementById(\"availableList\") as HTMLElement).style.marginLeft = \"60px\";\r\n    (document.getElementById(\"newList\") as HTMLElement).style.paddingLeft = \"410px\";\r\n  }\r\n\r\n  public toggleNav() {\r\n    if (this.open) {\r\n      this.closeNav();\r\n      this.open = false;\r\n    }\r\n    else {\r\n      this.openNav();\r\n      this.open = true;\r\n    }\r\n  }\r\n\r\n  public isOpen() {\r\n    return this.open;\r\n  }\r\n\r\n  public setupFactionList() {\r\n    this.menuBtn.onclick = () => {this.toggleNav();};\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) !== -1) {\r\n        this.factionList.appendChild(this.createFactionListElement(faction, true));\r\n      }\r\n    }\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) === -1) {\r\n        this.factionList.appendChild(this.createFactionListElement(faction, false));\r\n      }\r\n    }\r\n  }\r\n\r\n  private createFactionListElement(faction: string, supported: boolean): HTMLElement {\r\n    let listItem = document.createElement('li');\r\n    listItem.id = faction;\r\n    if (!supported) {\r\n      listItem.className = \"factionNotSupported\";\r\n    }\r\n    listItem.onclick = () => {/* ListBuilder.unitList.factionSelected(faction); */};\r\n    listItem.innerHTML = '<img src=\"Content/40kListBuilder/resources/icons/' + Factions[faction].icon +'\"/>' + faction;\r\n    return listItem;\r\n  }\r\n}\r\n","export default class UnitList {\r\n\r\n}\r\n","let Settings = {\r\n  supportedFactions: [\r\n    'Craftworlds',\r\n    'Harlequins',\r\n    'Ynnari'\r\n  ]\r\n};\r\n\r\nexport default Settings;\r\n","export default class Costs {\r\n\r\n  // cost values\r\n  public costs: Array<number>;\r\n\r\n  // elements\r\n  private pointsElement: HTMLElement;\r\n  private powerElement: HTMLElement;\r\n  private woundsElement: HTMLElement;\r\n  private modelsElement: HTMLElement;\r\n\r\n  constructor() {\r\n    this.costs = [0,0,0,0];\r\n    this.pointsElement = document.getElementById(\"POINTS\") as HTMLElement;\r\n    this.powerElement = document.getElementById(\"POWER\") as HTMLElement;\r\n    this.woundsElement = document.getElementById(\"WOUNDS\") as HTMLElement;\r\n    this.modelsElement = document.getElementById(\"MODELS\") as HTMLElement;\r\n    this.updateCosts();\r\n  }\r\n\r\n  private updateCosts() {\r\n    \r\n    this.pointsElement.innerHTML = '<div class=\"costValue\">' + this.costs[0] + '</div>' + 'POINTS';\r\n    this.powerElement.innerHTML = '<div class=\"displayedCostSmall\">Power: ' + this.costs[1] + '</div>';\r\n    this.woundsElement.innerHTML = '<div class=\"displayedCostSmall\">Wounds: ' + this.costs[2] + '</div>';\r\n    this.modelsElement.innerHTML = '<div class=\"displayedCostSmall\">Models: ' + this.costs[3] + '</div>';\r\n  }\r\n}\r\n"]}