{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/data/dataController.ts","src/data/factions.ts","src/editor/editor.ts","src/init.ts","src/lists/armyList.ts","src/lists/factionList.ts","src/lists/unitList.ts","src/objects/availableUnit.ts","src/settings.ts","src/utils/costController.ts"],"names":["f","exports","module","define","amd","window","global","self","this","listbuilder","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","factions_1","__importDefault","settings_1","Data","success","failure","filesLoaded","data","prototype","loadFactionData","_this","faction","default","supportedFactions","indexOf","json","dataFile","request_1","XMLHttpRequest","onload","onFileLoaded","JSON","parse","response","onerror","onFileFailed","open","send","name","jsonData","Adeptus Mechanicus","icon","Astra Militarum","Blood Angels","Chaos Daemons","Craftworlds","Dark Angels","Deathwatch","Drukhari","Genestealer Cults","Grey Knights","Harlequins","Heretic Astartes","Imperial Agents","Imperial Knights","Legion of the Damned","Necrons","Orks","Questor Traitoris","Space Marines","Space Wolves","T'au Empire","Talons of the Emporer","Tyranids","Ynnari","Editor","dataController_1","costController_1","factionList_1","unitList_1","armyList_1","editor_1","ListBuilder","setup","loadingFailure","costs","factionList","unitList","armyList","editor","alert","ArmyList","addUnit","id","type","addSmiteSpell","addFactionSpells","spells","init_1","FactionList","menuBtn","document","getElementById","setupFactionList","openNav","style","width","marginLeft","paddingLeft","closeNav","toggleNav","isOpen","onclick","appendChild","createFactionListElement","supported","listItem","createElement","className","factionSelected","innerHTML","availableUnit_1","UnitList","currentFaction","availableList","factionData","units","unit","push","renderList","availableListHTML","containingList","typeList","currentType","unitId","points","power","wounds","models","_i","_a","undefined","spellsList","smite","spellType","this_1","spellItem","spacer","AvailableUnit","unitInfo","getPointsValue","getPowerValue","getWoundsValue","getModelsValue","modelTypes","modelType","modelPoints","model","Points","PointsIncludesWargear","Wargear","weapons","weapon","wargear","defaultAmount","W","Costs","pointsElement","powerElement","woundsElement","modelsElement","updateCosts"],"mappings":"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","file":"listbuilder.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","import Factions from '../data/factions';\r\nimport Settings from '../settings';\r\n\r\ninterface DataCollection {\r\n  [key: string]: any;\r\n}\r\n\r\nexport default class Data {\r\n\r\n  public data: DataCollection;\r\n  private filesLoaded: number;\r\n  private success: Function;\r\n  private failure: Function;\r\n\r\n  constructor(success: Function, failure: Function) {\r\n    this.filesLoaded = 0;\r\n    this.success = success;\r\n    this.failure = failure;\r\n    this.data = {};\r\n  }\r\n\r\n  public loadFactionData() {\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) > -1) {\r\n        let json = Factions[faction].dataFile;\r\n        let request = new XMLHttpRequest();\r\n        request.onload = () => {\r\n          this.onFileLoaded(faction, JSON.parse(request.response));\r\n        };\r\n        request.onerror = () => {\r\n          this.onFileFailed();\r\n        };\r\n        request.open('get', '/Content/40kListBuilder/resources/data/' + json);\r\n        request.send();\r\n      }\r\n    }\r\n  }\r\n\r\n  private onFileLoaded(name: string, jsonData: Object) {\r\n    this.filesLoaded++;\r\n    this.data[name] = jsonData;\r\n    if (this.filesLoaded === Settings.supportedFactions.length) {\r\n      this.success();\r\n    }\r\n  }\r\n\r\n  private onFileFailed() {\r\n    this.failure();\r\n  }\r\n}\r\n","// TODO: should just be a list of names, icons, and file locations\r\n\r\nlet factions = {\r\n  \"Adeptus Mechanicus\": {\r\n    \"dataFile\": \"AdeptusMechanicus.json\",\r\n    \"icon\": \"adeptusmechanicus.png\"\r\n  },\r\n  \"Astra Militarum\": {\r\n    \"dataFile\": \"AstraMilitarum.json\",\r\n    \"icon\": \"astramilitarum.png\"\r\n  },\r\n  \"Blood Angels\": {\r\n    \"dataFile\": \"BloodAngles.json\",\r\n    \"icon\": \"bloodangels.png\"\r\n  },\r\n  \"Chaos Daemons\": {\r\n    \"dataFile\": \"Chaosaemons.json\",\r\n    \"icon\": \"chaosdaemons.png\"\r\n  },\r\n  \"Craftworlds\": {\r\n    \"dataFile\": \"Craftworlds.json\",\r\n    \"icon\": \"craftworld.png\"\r\n  },\r\n  \"Dark Angels\": {\r\n    \"dataFile\": \"DarkAngles.json\",\r\n    \"icon\": \"darkangels.png\"\r\n  },\r\n  \"Deathwatch\": {\r\n    \"dataFile\": \"Deathwatch.json\",\r\n    \"icon\": \"deathwatch.png\"\r\n  },\r\n  \"Drukhari\": {\r\n    \"dataFile\": \"Drukhari.json\",\r\n    \"icon\": \"drukhari.png\"\r\n  },\r\n  \"Genestealer Cults\": {\r\n    \"dataFile\": \"GenestealerCults.json\",\r\n    \"icon\": \"genestealers.png\"\r\n  },\r\n  \"Grey Knights\": {\r\n    \"dataFile\": \"GreyKnights.json\",\r\n    \"icon\": \"greyknights.png\"\r\n  },\r\n  \"Harlequins\": {\r\n    \"dataFile\": \"Harlequins.json\",\r\n    \"icon\": \"harlequins.png\"\r\n  },\r\n  \"Heretic Astartes\": {\r\n    \"dataFile\": \"HereticAstartes.json\",\r\n    \"icon\": \"hereticastartes.png\"\r\n  },\r\n  \"Imperial Agents\": {\r\n    \"dataFile\": \"ImperialAgents.json\",\r\n    \"icon\": \"imperialagents.png\"\r\n  },\r\n  \"Imperial Knights\": {\r\n    \"dataFile\": \"ImperialKnights.json\",\r\n    \"icon\": \"imperialknights.png\"\r\n  },\r\n  \"Legion of the Damned\": {\r\n    \"dataFile\": \"LegionOfTheDamned.json\",\r\n    \"icon\": \"legionofthedamned.png\"\r\n  },\r\n  \"Necrons\": {\r\n    \"dataFile\": \"Necrons.json\",\r\n    \"icon\": \"necrons.png\"\r\n  },\r\n  \"Orks\": {\r\n    \"dataFile\": \"Orks.json\",\r\n    \"icon\": \"orks.png\"\r\n  },\r\n  \"Questor Traitoris\": {\r\n    \"dataFile\": \"QuestorTraitoris.json\",\r\n    \"icon\": \"questortraitoris.png\"\r\n  },\r\n  \"Space Marines\": {\r\n    \"dataFile\": \"SpaceMarines.json\",\r\n    \"icon\": \"spacemarines.png\"\r\n  },\r\n  \"Space Wolves\": {\r\n    \"dataFile\": \"SpaceWolves.json\",\r\n    \"icon\": \"spacewolves.png\"\r\n  },\r\n  \"T'au Empire\": {\r\n    \"dataFile\": \"TauEmpire.json\",\r\n    \"icon\": \"tau.png\"\r\n  },\r\n  \"Talons of the Emporer\": {\r\n    \"dataFile\": \"TalonsOfTheEmporer.json\",\r\n    \"icon\": \"talonsoftheemperor.png\"\r\n  },\r\n  \"Tyranids\": {\r\n    \"dataFile\": \"Tyranids.json\",\r\n    \"icon\": \"tyranids.png\"\r\n  },\r\n  \"Ynnari\": {\r\n    \"dataFile\": \"Ynnari.json\",\r\n    \"icon\": \"ynnari.png\"\r\n  }\r\n};\r\n\r\nexport default factions;\r\n","export default class Editor {\r\n\r\n}\r\n","import Data from '../src/data/dataController';\r\nimport Costs from '../src/utils/costController';\r\nimport FactionList from '../src/lists/factionList';\r\nimport UnitList from '../src/lists/unitList';\r\nimport ArmyList from '../src/lists/armyList';\r\nimport Editor from '../src/editor/editor';\r\n\r\nexport default class ListBuilder {\r\n\r\n  public static data: Data;\r\n  public static costs: Costs;\r\n  public static factionList: FactionList;\r\n  public static unitList: UnitList;\r\n  public static armyList: ArmyList;\r\n  public static editor: Editor;\r\n\r\n  constructor() {\r\n    ListBuilder.data = new Data(this.setup, this.loadingFailure);\r\n  }\r\n\r\n  public loadFactionData() {\r\n    ListBuilder.data.loadFactionData();\r\n  }\r\n\r\n  public setup() {\r\n    ListBuilder.costs = new Costs();\r\n    ListBuilder.factionList = new FactionList();\r\n    ListBuilder.unitList = new UnitList();\r\n    ListBuilder.armyList = new ArmyList();\r\n    ListBuilder.editor = new Editor();\r\n  }\r\n\r\n  public loadingFailure() {\r\n    alert('Faction data failed to load :(');\r\n  }\r\n}\r\n\r\nlet list = new ListBuilder();\r\nlist.loadFactionData();\r\n\r\n/**\r\n * X 1. Load all the supported faction files\r\n * X 2. Create the cost header \r\n * 3. Create the faction list\r\n * 4. Create the army list\r\n * 5.   Create the available unit list\r\n * 6.   Populate the army list\r\n * 7.   Create the editor\r\n * \r\n * TODOs: \r\n *  - Spells\r\n *  - Strategems\r\n *  - Detachments\r\n *  - Warlord traits\r\n *  - A way to tell which weapon goes with which model in print view\r\n */\r\n","export default class ArmyList {\r\n\r\n  public addUnit(id: string, faction: string, type: string, name: string) {\r\n    // TODO - is id still needed\r\n  }\r\n\r\n  public addSmiteSpell() {\r\n    // TODO\r\n  }\r\n\r\n  public addFactionSpells(id: string, faction: string, spells: string) {\r\n    // TODO - is id still needed\r\n  }\r\n}\r\n","import Factions from '../data/factions';\r\nimport Settings from '../settings';\r\nimport ListBuilder from '../init';\r\n\r\nexport default class FactionList {\r\n\r\n  private open: boolean;\r\n  private menuBtn: HTMLElement;\r\n  private factionList: HTMLElement;\r\n\r\n  constructor() {\r\n    this.open = false;\r\n    this.menuBtn = (document.getElementById(\"factionBtn\") as HTMLElement);\r\n    this.factionList = (document.getElementById(\"factionList\") as HTMLElement);\r\n    this.setupFactionList();\r\n  }\r\n\r\n  public openNav() {\r\n    (document.getElementById(\"sidenav\") as HTMLElement).style.width = \"350px\";\r\n    (document.getElementById(\"availableList\") as HTMLElement).style.marginLeft = \"350px\";\r\n    (document.getElementById(\"newList\") as HTMLElement).style.paddingLeft = \"700px\";\r\n    this.open = true;\r\n  }\r\n\r\n  public closeNav() {\r\n    (document.getElementById(\"sidenav\") as HTMLElement).style.width = \"60px\";\r\n    (document.getElementById(\"availableList\") as HTMLElement).style.marginLeft = \"60px\";\r\n    (document.getElementById(\"newList\") as HTMLElement).style.paddingLeft = \"410px\";\r\n    this.open = false;\r\n  }\r\n\r\n  public toggleNav() {\r\n    if (this.open) {\r\n      this.closeNav();\r\n    }\r\n    else {\r\n      this.openNav();\r\n    }\r\n  }\r\n\r\n  public isOpen() {\r\n    return this.open;\r\n  }\r\n\r\n  public setupFactionList() {\r\n    this.menuBtn.onclick = () => { this.toggleNav(); };\r\n    if (!this.isOpen()) {\r\n      this.openNav();\r\n    }\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) !== -1) {\r\n        this.factionList.appendChild(this.createFactionListElement(faction, true));\r\n      }\r\n    }\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) === -1) {\r\n        this.factionList.appendChild(this.createFactionListElement(faction, false));\r\n      }\r\n    }\r\n  }\r\n\r\n  private createFactionListElement(faction: string, supported: boolean): HTMLElement {\r\n    let listItem = document.createElement('li');\r\n    listItem.id = faction;\r\n    if (!supported) {\r\n      listItem.className = \"factionNotSupported\";\r\n    }\r\n    listItem.onclick = () => { this.factionSelected(faction); };\r\n    listItem.innerHTML = '<img src=\"Content/40kListBuilder/resources/icons/' + Factions[faction].icon + '\"/>' + faction;\r\n    return listItem;\r\n  }\r\n\r\n  private factionSelected(faction: string) {\r\n    ListBuilder.unitList.factionSelected(faction);\r\n    if (this.isOpen()) {\r\n      this.closeNav();\r\n    }\r\n  }\r\n}\r\n","import AvailableUnit from \"../objects/availableUnit\";\r\nimport ListBuilder from \"../init\";\r\n\r\nexport default class UnitList {\r\n\r\n  private currentFaction: string;\r\n  private availableList: Array<AvailableUnit>;\r\n\r\n  constructor() {\r\n    this.currentFaction = '';\r\n    this.availableList = [];\r\n  }\r\n\r\n  public factionSelected(faction: string) {\r\n    this.availableList = [];\r\n    this.currentFaction = faction;\r\n    let factionData = ListBuilder.data.data[faction];\r\n    for (let type in factionData.units) {\r\n      let units = factionData.units[type];\r\n      for (let unit in units) {\r\n        this.availableList.push(new AvailableUnit(faction, type, unit));\r\n      }\r\n    }\r\n    this.renderList();\r\n  }\r\n\r\n  public renderList() {\r\n    let availableListHTML = (document.getElementById(\"availableList\") as HTMLElement);\r\n    availableListHTML.innerHTML = '<h2>' + this.currentFaction + '</h2>';\r\n\r\n    let containingList = document.createElement('ul');\r\n    let typeList = document.createElement('ul');\r\n    let currentType = \"\";\r\n    let listItem = document.createElement('li');\r\n\r\n    for (let unit of this.availableList) {\r\n      if (unit.type !== currentType) {\r\n        if (currentType !== \"\") {\r\n          containingList.appendChild(typeList);\r\n          typeList = document.createElement('ul');\r\n        }\r\n        typeList.innerHTML = unit.type + '<hr/>';\r\n        currentType = unit.type;\r\n      }    \r\n      let unitId = unit.faction + \"-\" + unit.type + \"-\" + unit.name;\r\n      listItem = document.createElement('li');\r\n      listItem.id = unitId;\r\n      listItem.onclick = () => {\r\n        ListBuilder.armyList.addUnit(unitId, unit.faction, unit.type, unit.name);\r\n      };\r\n      listItem.innerHTML = unit.name\r\n        + '<br/><div id=\"unitDetails\"><table><tr><td>Points: ' \r\n        + unit.points\r\n        + '</td><td>Power: '\r\n        + unit.power\r\n        + '</td><td>Wounds: '\r\n        + unit.wounds\r\n        + '</td><td>Models: '\r\n        + unit.models\r\n        + '</td></tr></table></div>';\r\n      typeList.appendChild(listItem);\r\n    }\r\n    containingList.appendChild(typeList);\r\n    \r\n    if (ListBuilder.data.data[this.currentFaction].spells !== undefined) {\r\n      let spellsList = document.createElement('ul');\r\n      spellsList.innerHTML = 'Spells<hr/>';\r\n\r\n      let smite = document.createElement('li');\r\n      smite.id = \"smite\";\r\n      smite.onclick = () => {\r\n        ListBuilder.armyList.addSmiteSpell();\r\n      };\r\n      smite.innerHTML = \"Smite\";\r\n      spellsList.appendChild(smite);\r\n\r\n      for (let spellType in ListBuilder.data.data[this.currentFaction].spells) {\r\n        let id = this.currentFaction + '-' + spellType;\r\n        let spellItem = document.createElement('li');\r\n        spellItem.id = id;\r\n        spellItem.onclick = () => {\r\n          ListBuilder.armyList.addFactionSpells(id, this.currentFaction, spellType);\r\n        };\r\n        spellItem.innerHTML = spellType;\r\n        spellsList.appendChild(spellItem);\r\n      }\r\n      containingList.appendChild(spellsList);\r\n    }\r\n\r\n    availableListHTML.appendChild(containingList);\r\n\r\n    let spacer = document.createElement('div');\r\n    spacer.className = \"spacer\";\r\n    availableListHTML.appendChild(spacer);\r\n  }\r\n}\r\n","import ListBuilder from \"../init\";\r\n\r\nexport default class AvailableUnit {\r\n\r\n  public faction: string;\r\n  public type: string;\r\n  public name: string;\r\n  public unitInfo: any;\r\n  public points: number;\r\n  public power: number;\r\n  public wounds: number;\r\n  public models: number;\r\n\r\n  constructor(faction: string, type: string, unit: string) {\r\n    this.faction = faction;\r\n    this.type = type;\r\n    this.name = unit;\r\n    this.unitInfo = ListBuilder.data.data[faction].units[type][unit];\r\n    this.points = this.getPointsValue();\r\n    this.power = this.getPowerValue();\r\n    this.wounds = this.getWoundsValue();\r\n    this.models = this.getModelsValue();\r\n  }\r\n\r\n  public getPointsValue() {\r\n    let points = 0;\r\n    for (let modelType of this.unitInfo.modelTypes) {\r\n      let modelPoints = 0;\r\n      let model = ListBuilder.data.data[this.faction].models[modelType.model];\r\n      modelPoints += model.Points;  \r\n      if (!model.PointsIncludesWargear) {\r\n        if(model.Wargear.weapons) {\r\n          for (let weapon = 0; weapon < model.Wargear.weapons[0].length; weapon++) {\r\n            modelPoints += ListBuilder.data.data[this.faction].wargear[model.Wargear.weapons[0][weapon]].Points;\r\n          }\r\n        }\r\n      }\r\n      points += (modelPoints * modelType.defaultAmount);\r\n    }\r\n    return points;\r\n  }\r\n\r\n  public getPowerValue() {\r\n    let power = 0;\r\n    power += this.unitInfo.power[0][1];\r\n    return power;\r\n  }\r\n\r\n  public getWoundsValue() {\r\n    let wounds = 0;\r\n    for (let modelType of this.unitInfo.modelTypes) {\r\n      let model = ListBuilder.data.data[this.faction].models[modelType.model];\r\n      wounds += (model.W * modelType.defaultAmount); \r\n    }\r\n    return wounds;\r\n  }\r\n\r\n  public getModelsValue() {\r\n    let models = 0;\r\n    for (let modelType of this.unitInfo.modelTypes) {\r\n      models += modelType.defaultAmount;\r\n    }\r\n    return models;\r\n  }\r\n}\r\n","let Settings = {\r\n  supportedFactions: [\r\n    'Craftworlds',\r\n    'Harlequins',\r\n    'Ynnari'\r\n  ]\r\n};\r\n\r\nexport default Settings;\r\n","export default class Costs {\r\n\r\n  // cost values\r\n  public costs: Array<number>;\r\n\r\n  // elements\r\n  private pointsElement: HTMLElement;\r\n  private powerElement: HTMLElement;\r\n  private woundsElement: HTMLElement;\r\n  private modelsElement: HTMLElement;\r\n\r\n  constructor() {\r\n    this.costs = [0,0,0,0];\r\n    this.pointsElement = document.getElementById(\"POINTS\") as HTMLElement;\r\n    this.powerElement = document.getElementById(\"POWER\") as HTMLElement;\r\n    this.woundsElement = document.getElementById(\"WOUNDS\") as HTMLElement;\r\n    this.modelsElement = document.getElementById(\"MODELS\") as HTMLElement;\r\n    this.updateCosts();\r\n  }\r\n\r\n  private updateCosts() {\r\n    \r\n    this.pointsElement.innerHTML = '<div class=\"costValue\">' + this.costs[0] + '</div>' + 'POINTS';\r\n    this.powerElement.innerHTML = '<div class=\"displayedCostSmall\">Power: ' + this.costs[1] + '</div>';\r\n    this.woundsElement.innerHTML = '<div class=\"displayedCostSmall\">Wounds: ' + this.costs[2] + '</div>';\r\n    this.modelsElement.innerHTML = '<div class=\"displayedCostSmall\">Models: ' + this.costs[3] + '</div>';\r\n  }\r\n}\r\n"]}