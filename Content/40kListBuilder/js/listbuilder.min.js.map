{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/data/dataController.ts","src/data/factions.ts","src/editor/editor.ts","src/init.ts","src/lists/armyList.ts","src/lists/factionList.ts","src/lists/unitList.ts","src/objects/availableUnit.ts","src/objects/model.ts","src/objects/spellList.ts","src/objects/unit.ts","src/settings.ts","src/utils/costController.ts"],"names":["f","exports","module","define","amd","window","global","self","this","listbuilder","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","factions_1","__importDefault","settings_1","Data","success","failure","filesLoaded","data","prototype","loadFactionData","_this","faction","default","supportedFactions","indexOf","json","dataFile","request_1","XMLHttpRequest","onload","onFileLoaded","JSON","parse","response","onerror","onFileFailed","open","send","name","jsonData","Adeptus Custodes","icon","Adeptus Mechanicus","Astra Militarum","Blood Angels","Chaos Daemons","Chaos Space Marines","Craftworlds","Dark Angels","Death Guard","Deathwatch","Drukhari","Grey Knights","Harlequins","Imperial Knights","Necrons","Orks","Space Marines","T'au Empire","Thousand Sons","Tyranids","Ynnari","Editor","editorContainerHTML","document","getElementById","editorHTML","style","width","unit","editUnit","id","listContents","list","armyList","type","renderEdit","addModel","removeModel","editLoadout","argStr","args","split","updateModelWargear","editAllegiance","index","updateAllegiance","closeEdit","updateCosts","renderList","editFields","innerHTML","getUnitNameAndCostHTML","globalMax","unitInfo","modelTypes","maxAmount","globalMin","defaultAmount","totalModels","models","model","getModelTypeHTML","max","getStatsHeadersHTML","getModelStatsHTML","getWeaponsHeadersHTML","getWeaponsHTML","getWeaponLoadoutSelectionHTML","getSeperatorHTML","canAdd","canRemove","getButtonRowHTML","allegianceHTML","getAllegianceHTML","costHTML","totalPoints","totalPower","totalWounds","modelId","HTML","html","getUnProfiledStats","modelInfo","M","WS","BS","S","T","W","A","Ld","Sv","selectedWeapons","slot","Wargear","selectedWeaponConfig","_i","_a","weaponId","push","_b","selectedWeapons_1","weapon","weaponInfo","wargear","undefined","WargearAbility","profiles","Range","Type","AP","D","Abilities","desription","description","profile","profileInfo","valueStr","valueId","loadoutLength","selected","weaponsList","cost","Points","formatWeaponsList","weapons","formattedList","modelType","allegiances","Allegiance","selectedAllegiance","dataController_1","costController_1","factionList_1","unitList_1","armyList_1","editor_1","ListBuilder","costs","factionList","unitList","editor","setup","loadingFailure","init","alert","unit_1","spellList_1","ArmyList","HQ","Troops","Elites","Fast Attack","Heavy Support","Dedicated Transport","Flyer","Fortification","Lord Of War","Spells","Strategems","Warlord Traits","Warlord Wargear","Detachments","Detachment Abilities","Tactical Objectives","currentUnits","addUnit","removeUnit","tempArray","addSmiteSpell","addFactionSpells","spells","power","points","wounds","updateCostsExt","listContainer","imageName","getImageName","unitTable","createElement","className","getStatsHTML","getAbilitiesHTML","getPsykerHTML","getKeywordsHTML","appendChild","getUnitControls","spell","getSpellsHTML","spacer","controlList","deleteBtn","editBtn","FactionList","menuBtn","setupFactionList","openNav","marginLeft","paddingLeft","closeNav","toggleNav","isOpen","onclick","createFactionListElement","supported","listItem","factionSelected","availableUnit_1","UnitList","currentFaction","availableList","factionData","units","availableListHTML","containingList","typeList","currentType","spellsList","smite","spellType","this_1","spellItem","AvailableUnit","getPointsValue","getPowerValue","getWoundsValue","getModelsValue","modelPoints","PointsIncludesWargear","Model","SpellList","spellsName","setSpellConfig","spellTable","spellConfig","model_1","Unit","unitId","setupDefaultModels","modelNumStr","stat","stats","value","Wounds","listOfWeapons","amountsPerWeapon","selectedIndex","weaponIndex","numberOf","abilityHTML","abilityList","abilities","ability","factionAbility","htmlString","getFactionAbility","factionSpecialRules","psykerHTML","Psyker","keywords","keyword","toUpperCase","Keywords","keywordHTML","keywords_1","calculateModels","calculateWounds","calculatePoints","calculatePower","newModel","pop","modelIndex","weaponSlot","num","Costs","pointsElement","powerElement","woundsElement","modelsElement"],"mappings":"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","file":"listbuilder.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","import Factions from '../data/factions';\r\nimport Settings from '../settings';\r\n\r\ninterface DataCollection {\r\n  [key: string]: any;\r\n}\r\n\r\nexport default class Data {\r\n\r\n  public data: DataCollection;\r\n  private filesLoaded: number;\r\n  private success: Function;\r\n  private failure: Function;\r\n\r\n  constructor(success: Function, failure: Function) {\r\n    this.filesLoaded = 0;\r\n    this.success = success;\r\n    this.failure = failure;\r\n    this.data = {};\r\n  }\r\n\r\n  public loadFactionData() {\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) > -1) {\r\n        let json = Factions[faction].dataFile;\r\n        let request = new XMLHttpRequest();\r\n        request.onload = () => {\r\n          this.onFileLoaded(faction, JSON.parse(request.response));\r\n        };\r\n        request.onerror = () => {\r\n          this.onFileFailed();\r\n        };\r\n        request.open('get', 'Content/40kListBuilder/resources/data/' + json);\r\n        request.send();\r\n      }\r\n    }\r\n  }\r\n\r\n  private onFileLoaded(name: string, jsonData: Object) {\r\n    this.filesLoaded++;\r\n    this.data[name] = jsonData;\r\n    if (this.filesLoaded === Settings.supportedFactions.length) {\r\n      this.success();\r\n    }\r\n  }\r\n\r\n  private onFileFailed() {\r\n    this.failure();\r\n  }\r\n}\r\n","// TODO: should just be a list of names, icons, and file locations\r\n\r\nlet factions: any = {\r\n  \"Adeptus Custodes\": {\r\n    \"dataFile\": \"AdeptusCustodes.json\",\r\n    \"icon\": \"talonsoftheemperor.png\"\r\n  },\r\n  \"Adeptus Mechanicus\": {\r\n    \"dataFile\": \"AdeptusMechanicus.json\",\r\n    \"icon\": \"adeptusmechanicus.png\"\r\n  },\r\n  \"Astra Militarum\": {\r\n    \"dataFile\": \"AstraMilitarum.json\",\r\n    \"icon\": \"astramilitarum.png\"\r\n  },\r\n  \"Blood Angels\": {\r\n    \"dataFile\": \"BloodAngles.json\",\r\n    \"icon\": \"bloodangels.png\"\r\n  },\r\n  \"Chaos Daemons\": {\r\n    \"dataFile\": \"Chaosaemons.json\",\r\n    \"icon\": \"chaosdaemons.png\"\r\n  },\r\n  \"Chaos Space Marines\": {\r\n    \"dataFile\": \"ChaosSpaceMarines.json\",\r\n    \"icon\": \"chaosdaemons.png\"\r\n  },\r\n  \"Craftworlds\": {\r\n    \"dataFile\": \"Craftworlds.json\",\r\n    \"icon\": \"craftworld.png\"\r\n  },\r\n  \"Dark Angels\": {\r\n    \"dataFile\": \"DarkAngles.json\",\r\n    \"icon\": \"darkangels.png\"\r\n  },\r\n  \"Death Guard\": {\r\n    \"dataFile\": \"DeathGuard.json\",\r\n    \"icon\": \"deathwatch.png\"\r\n  },\r\n  \"Deathwatch\": {\r\n    \"dataFile\": \"Deathwatch.json\",\r\n    \"icon\": \"hereticastartes.png\"\r\n  },\r\n  \"Drukhari\": {\r\n    \"dataFile\": \"Drukhari.json\",\r\n    \"icon\": \"drukhari.png\"\r\n  },\r\n  \"Grey Knights\": {\r\n    \"dataFile\": \"GreyKnights.json\",\r\n    \"icon\": \"greyknights.png\"\r\n  },\r\n  \"Harlequins\": {\r\n    \"dataFile\": \"Harlequins.json\",\r\n    \"icon\": \"harlequins.png\"\r\n  },\r\n  \"Imperial Knights\": {\r\n    \"dataFile\": \"ImperialKnights.json\",\r\n    \"icon\": \"imperialknights.png\"\r\n  },\r\n  \"Necrons\": {\r\n    \"dataFile\": \"Necrons.json\",\r\n    \"icon\": \"necrons.png\"\r\n  },\r\n  \"Orks\": {\r\n    \"dataFile\": \"Orks.json\",\r\n    \"icon\": \"orks.png\"\r\n  },\r\n  \"Space Marines\": {\r\n    \"dataFile\": \"SpaceMarines.json\",\r\n    \"icon\": \"spacemarines.png\"\r\n  },\r\n  \"T'au Empire\": {\r\n    \"dataFile\": \"TauEmpire.json\",\r\n    \"icon\": \"tau.png\"\r\n  },\r\n  \"Thousand Sons\": {\r\n    \"dataFile\": \"ThousandSons.json\",\r\n    \"icon\": \"hereticastartes.png\"\r\n  },\r\n  \"Tyranids\": {\r\n    \"dataFile\": \"Tyranids.json\",\r\n    \"icon\": \"tyranids.png\"\r\n  },\r\n  \"Ynnari\": {\r\n    \"dataFile\": \"Ynnari.json\",\r\n    \"icon\": \"ynnari.png\"\r\n  }\r\n};\r\n\r\nexport default factions;\r\n","import Unit from '../objects/unit';\r\nimport Model from '../objects/model';\r\n\r\nexport default class Editor {\r\n\r\n  private editorContainerHTML: HTMLElement;\r\n  private editorHTML: HTMLElement;\r\n  private unit: any;\r\n  \r\n  public constructor() {\r\n    this.editorContainerHTML = (document.getElementById(\"editor\") as HTMLElement);\r\n    this.editorHTML = (document.getElementById(\"editorForm\") as HTMLElement);\r\n    this.editorContainerHTML.style.width = '0px';\r\n    this.unit = {};\r\n  }\r\n\r\n  public editUnit(id: number) {\r\n    let listContents = window.list.armyList.listContents;\r\n    for (let type in listContents) {\r\n      for (let unit in listContents[type]) {\r\n        if (listContents[type][unit].id === id) {\r\n          this.unit = listContents[type][unit];\r\n          this.renderEdit();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public addModel(id: string) {\r\n    this.unit.addModel(id);\r\n  }\r\n\r\n  public removeModel(id: string) {\r\n    this.unit.removeModel(id);\r\n  }\r\n\r\n  public editLoadout(argStr: string) {\r\n    let args = argStr.split('-');\r\n    this.unit.updateModelWargear(args[0], args[1], args[2], args[3]);\r\n  }\r\n\r\n  public editAllegiance(index: number) {\r\n    this.unit.updateAllegiance(index);\r\n  }\r\n\r\n  public closeEdit() {\r\n    this.editorContainerHTML.style.width = '0px';\r\n    window.list.armyList.updateCosts();\r\n    window.list.armyList.renderList();\r\n  } \r\n\r\n  public renderEdit() {\r\n    this.editorContainerHTML.style.width = '100%';\r\n    let editFields = this.editorHTML.innerHTML;\r\n    editFields = '';\r\n\r\n    editFields += '<table class=\"editTable\">';\r\n    editFields += this.getUnitNameAndCostHTML(this.unit);\r\n\r\n    let globalMax = this.unit.unitInfo.modelTypes[0].maxAmount;\r\n    let globalMin = this.unit.unitInfo.modelTypes[0].defaultAmount;\r\n    let totalModels = 0;\r\n    for (let i = 0; i < this.unit.unitInfo.modelTypes.length; i++) {\r\n      totalModels += this.unit.models[this.unit.unitInfo.modelTypes[i].model].length;\r\n    }\r\n\r\n    for (let i = 0; i < this.unit.unitInfo.modelTypes.length; i++) {\r\n      editFields += this.getModelTypeHTML(this.unit.unitInfo.modelTypes[i].model);\r\n      let models = this.unit.models[this.unit.unitInfo.modelTypes[i].model];\r\n      let max = this.unit.unitInfo.modelTypes[i].maxAmount;\r\n      if (models) {\r\n        for (let model in models) {\r\n          editFields += this.unit.getStatsHeadersHTML();\r\n          editFields += this.getModelStatsHTML(this.unit, models[model]);\r\n          editFields += this.unit.getWeaponsHeadersHTML();\r\n          editFields += this.getWeaponsHTML(models[model], this.unit.faction);\r\n          editFields += this.getWeaponLoadoutSelectionHTML(i, model, models[model]);\r\n          editFields += this.getSeperatorHTML();\r\n        }\r\n        let canAdd = (totalModels < globalMax && models.length < max);\r\n        let canRemove = (totalModels > globalMin && models.length > 0);\r\n        editFields += this.getButtonRowHTML(canAdd, canRemove, i);\r\n        editFields += this.getSeperatorHTML();\r\n      }\r\n    }\r\n\r\n    let allegianceHTML = this.getAllegianceHTML(this.unit);\r\n    if (allegianceHTML !== '') {\r\n      editFields += '<tr><td class=\"modelType\" colspan=\"11\">Allegiance</td></tr>';\r\n      editFields += allegianceHTML;\r\n    }\r\n    editFields += '</table>';\r\n\r\n    editFields += '<button class=\"closeButton\" type=\"button\" onclick=\"list.editor.closeEdit()\">Done</button>';\r\n    this.editorHTML.innerHTML = editFields;\r\n  }\r\n\r\n  private getUnitNameAndCostHTML(unit: Unit) {\r\n    let costHTML =  'Points: ' + unit.totalPoints\r\n                 +  ' | Power: ' + unit.totalPower\r\n                 +  ' | Wounds: ' + unit.totalWounds\r\n                 +  ' | Models: ' + unit.totalModels;\r\n    let HTML = '<tr>'\r\n      + '<td class=\"name\" colspan=\"5\">' + unit.name + '</td>'\r\n      + '<td class=\"cost\" colspan=\"6\">' + costHTML + '</td>'\r\n      + '</tr>';\r\n    \r\n    return HTML;\r\n  }\r\n\r\n  private getModelTypeHTML(type: string) {\r\n    return '<tr><td class=\"modelType\" colspan=\"11\">' + type + '(s)</td></tr>';\r\n  }\r\n\r\n  private getButtonRowHTML(canAdd: boolean, canRemove: boolean, model: number) {\r\n    let  modelId = \"'\" + model + \"'\";\r\n    let HTML = '<tr><td colspan=\"11\">';\r\n    if (canAdd) {\r\n      HTML += '<button class=\"add\" type=\"button\" onclick=\"list.editor.addModel(' + modelId + ')\">Add</button>';\r\n    }\r\n    if (canRemove) {\r\n      HTML += '<button class=\"remove\" type=\"button\" onclick=\"list.editor.removeModel(' + modelId + ')\">Remove</button>';\r\n    }\r\n    HTML += '</td></tr>';\r\n    return HTML;\r\n  } \r\n\r\n  private getModelStatsHTML(unit: Unit, model: Model) {\r\n    let html = '';\r\n    html += '<tr>'\r\n      + '<td class=\"stat\" id=\"name\">' + model.name + '</td>'\r\n      + '<td class=\"stat\" id=\"m\">' + unit.getUnProfiledStats(model.modelInfo.M) + '</td>'\r\n      + '<td class=\"stat\" id=\"ws\">' + unit.getUnProfiledStats(model.modelInfo.WS) + '</td>'\r\n      + '<td class=\"stat\" id=\"bs\">' + unit.getUnProfiledStats(model.modelInfo.BS) + '</td>'\r\n      + '<td class=\"stat\" id=\"s\">' + unit.getUnProfiledStats(model.modelInfo.S) + '</td>'\r\n      + '<td class=\"stat\" id=\"t\">' + unit.getUnProfiledStats(model.modelInfo.T) + '</td>'\r\n      + '<td class=\"stat\" id=\"w\">' + unit.getUnProfiledStats(model.modelInfo.W) + '</td>'\r\n      + '<td class=\"stat\" id=\"a\">' + unit.getUnProfiledStats(model.modelInfo.A) +'</td>'\r\n      + '<td class=\"stat\" id=\"ld\">' + unit.getUnProfiledStats(model.modelInfo.Ld) + '</td>'\r\n      + '<td class=\"stat\" id=\"sv\">' + unit.getUnProfiledStats(model.modelInfo.Sv) + '</td>'\r\n      + '<td></td>'\r\n      + '</tr>';\r\n    return html;\r\n  }\r\n\r\n  private getWeaponsHTML(model: Model, faction: string) {\r\n    let HTML = '';\r\n    let selectedWeapons: Array<string> = [];\r\n    for (let slot in model.modelInfo.Wargear) {\r\n      let index = model.selectedWeaponConfig[slot] || 0;\r\n      for (let weaponId of model.modelInfo.Wargear[slot][index]) {\r\n        selectedWeapons.push(weaponId);\r\n      }\r\n    }\r\n    // let selectedWeapons = model.modelInfo.Wargear.weapons[model.selectedWeaponConfig];\r\n    for (let weapon of selectedWeapons) {\r\n      let weaponInfo = window.list.data.data[faction].wargear[weapon];\r\n      if (weaponInfo !== undefined) {\r\n        if (weaponInfo.WargearAbility !== undefined) {\r\n          HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"abilities\" colspan=\"9\">' + weaponInfo.WargearAbility + '</td>'\r\n          + '</tr>';\r\n        }\r\n        else if (weaponInfo.profiles === undefined) {\r\n          HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"range\">' + weaponInfo.Range + '</td>'\r\n          + '<td class=\"stat\" id=\"type\">' + weaponInfo.Type + '</td>'\r\n          + '<td class=\"stat\" id=\"s\">' + weaponInfo.S + '</td>'\r\n          + '<td class=\"stat\" id=\"ap\">' + weaponInfo.AP + '</td>'\r\n          + '<td class=\"stat\" id=\"d\">' + weaponInfo.D + '</td>'\r\n          + '<td class=\"stat\" id=\"abilities\" colspan=\"4\">' + weaponInfo.Abilities + '</td>'\r\n          + '</tr>';\r\n        }\r\n        else {\r\n          let desription = weaponInfo.description === undefined ? '' : weaponInfo.description;\r\n          HTML += '<tr class=\"profiledWeapon\">'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"description\" colspan=\"9\">' + desription + '</td>'\r\n          + '</tr>';\r\n          for (let profile in weaponInfo.profiles) {\r\n            let profileInfo = weaponInfo.profiles[profile];\r\n            if (profileInfo !== undefined) {\r\n              HTML += '<tr class=\"profile\">'\r\n              + '<td class=\"stat\" id=\"name\"> - ' + profile + '</td>'\r\n              + '<td class=\"stat\" id=\"range\">' + profileInfo.Range + '</td>'\r\n              + '<td class=\"stat\" id=\"type\">' + profileInfo.Type + '</td>'\r\n              + '<td class=\"stat\" id=\"s\">' + profileInfo.S + '</td>'\r\n              + '<td class=\"stat\" id=\"ap\">' + profileInfo.AP + '</td>'\r\n              + '<td class=\"stat\" id=\"d\">' + profileInfo.D + '</td>'\r\n              + '<td class=\"stat\" id=\"abilities\" colspan=\"4\">' + profileInfo.Abilities + '</td>'\r\n              + '</tr>';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return HTML;\r\n  }\r\n\r\n  private getWeaponLoadoutSelectionHTML(type: number, id: string, model: Model) {\r\n    let valueStr = '' + type + '-' + id + '-';\r\n    let HTML = '<tr><td colspan=\"11\">';\r\n    for (let slot in model.modelInfo.Wargear) {    \r\n      let valueId = valueStr + slot + '-';\r\n      let loadoutLength = model.modelInfo.Wargear[slot].length;\r\n      if (loadoutLength > 1) {\r\n        let selected = model.selectedWeaponConfig[slot] || 0;\r\n        HTML += '<select onchange=\"window.list.editor.editLoadout(value);\">';   \r\n        for (let i = 0; i < loadoutLength; i++) {\r\n          let weaponsList = model.modelInfo.Wargear[slot][i];\r\n          let cost = 0;\r\n          for (let weapon = 0; weapon < weaponsList.length; weapon++) {\r\n            cost += window.list.data.data[this.unit.faction].wargear[weaponsList[weapon]].Points;\r\n          }\r\n          if (i == selected) {\r\n            HTML += '<option value=\"' + valueId + i + '\" selected=\"selected\">' + this.formatWeaponsList(model.modelInfo.Wargear[slot][i], cost) + '</option>';\r\n          }\r\n          else {     \r\n            HTML += '<option value=\"' + valueId + i + '\">' + this.formatWeaponsList(model.modelInfo.Wargear[slot][i], cost) + '</option>';\r\n          }\r\n        }\r\n        HTML += '</select>';\r\n      }\r\n      else {\r\n        let cost = 0;\r\n        let weaponsList = model.modelInfo.Wargear[slot][0];\r\n        for (let weapon = 0; weapon < weaponsList.length; weapon++) {\r\n          cost += window.list.data.data[this.unit.faction].wargear[weaponsList[weapon]].Points;\r\n        }\r\n        let name = this.formatWeaponsList(model.modelInfo.Wargear[slot][0], cost);\r\n        HTML += '<div class=\"selectSingle\">' + name + '</div>';\r\n      }\r\n    }\r\n    HTML += '</td></tr>';\r\n    return HTML;\r\n  }\r\n\r\n  private formatWeaponsList(weapons: Array<string>, cost: number) {\r\n    let formattedList = '';\r\n    for (let i = 0; i < weapons.length; i++) {\r\n      formattedList += weapons[i];\r\n      if (i !== weapons.length - 1) {\r\n        formattedList += ' | ';\r\n      }\r\n    }\r\n    if (formattedList !== \"\") {\r\n      formattedList += ' (' + cost + ' pnts)';\r\n    }\r\n    else {\r\n      formattedList = '&lt;empty&gt;';\r\n    }\r\n    return formattedList;\r\n  }\r\n\r\n  private getAllegianceHTML(unit: Unit) {\r\n    let HTML = '';\r\n    for (let modelType in unit.models) {\r\n      if (unit.models[modelType].length > 0) {\r\n        let allegiances = unit.models[modelType][0].modelInfo.Allegiance;\r\n        if (allegiances !== undefined) {\r\n          let selected = unit.models[modelType][0].selectedAllegiance;\r\n          HTML += '<tr><td colspan=\"11\"><select onchange=\"window.list.editor.editAllegiance(value);\">';\r\n          for (let i = 0; i < allegiances.length; i++) {\r\n            if (i == selected) {\r\n              HTML += '<option selected=\"selected\" value=\"' + i + '\">' + allegiances[i] + '</option>';\r\n            }\r\n            else {\r\n              HTML += '<option value=\"' + i + '\">' + allegiances[i] + '</option>';\r\n            }\r\n          }\r\n          HTML += '</select></td></tr>';\r\n          return HTML;\r\n        }\r\n      }\r\n    }\r\n    return HTML;\r\n  }\r\n\r\n  private getSeperatorHTML() {\r\n    return '<tr><td class=\"seperator\" colspan=\"11\"><hr/></td></tr>';\r\n  }\r\n}\r\n","import Data from '../src/data/dataController';\r\nimport Costs from '../src/utils/costController';\r\nimport FactionList from '../src/lists/factionList';\r\nimport UnitList from '../src/lists/unitList';\r\nimport ArmyList from '../src/lists/armyList';\r\nimport Editor from '../src/editor/editor';\r\n\r\nexport default class ListBuilder {\r\n\r\n  public data: Data;\r\n  public costs: Costs;\r\n  public factionList: FactionList;\r\n  public unitList: UnitList;\r\n  public armyList: ArmyList;\r\n  public editor: Editor;\r\n\r\n  constructor() {\r\n    this.costs = new Costs();\r\n    this.factionList = new FactionList();\r\n    this.unitList = new UnitList();\r\n    this.armyList = new ArmyList();\r\n    this.editor = new Editor();\r\n    this.data = new Data(this.setup, this.loadingFailure);\r\n  }\r\n\r\n  public loadFactionData() {\r\n    this.data.loadFactionData();\r\n  }\r\n\r\n  public setup() {\r\n    window.list.costs.init();\r\n    window.list.factionList.init();\r\n  }\r\n\r\n  public loadingFailure() {\r\n    alert('Faction data failed to load :(');\r\n  }\r\n}\r\n\r\nlet list = new ListBuilder();\r\nlist.loadFactionData();\r\n\r\ndeclare global {\r\n  interface Window {\r\n    list: ListBuilder;\r\n  }\r\n}\r\nwindow.list = list;\r\n\r\n/**\r\n * X 1. Load all the supported faction files\r\n * X 2. Create the cost header \r\n * X 3. Create the faction list\r\n * X 4. Create the army list\r\n * X 5.   Create the available unit list\r\n * X 6.   Populate the army list\r\n * 7.   Create the editor\r\n * \r\n * TODOs: \r\n *  - Spells\r\n *  - Strategems\r\n *  - Detachments\r\n *  - Warlord traits\r\n *  - A way to tell which weapon goes with which model in print view\r\n */\r\n","import Unit from '../objects/unit';\r\nimport SpellList from '../objects/spellList';\r\n\r\nexport default class ArmyList {\r\n\r\n  public listContents: any;\r\n  private currentUnits: number;\r\n\r\n  constructor() {\r\n    this.listContents = {\r\n      \"HQ\": [],\r\n      \"Troops\": [],\r\n      \"Elites\": [],\r\n      \"Fast Attack\": [],\r\n      \"Heavy Support\": [],\r\n      \"Dedicated Transport\": [],\r\n      \"Flyer\": [],\r\n      \"Fortification\": [],\r\n      \"Lord Of War\": [],\r\n      \"Spells\": [],\r\n      \"Strategems\": [],\r\n      \"Warlord Traits\": [],\r\n      \"Warlord Wargear\": [],\r\n      \"Detachments\": [],\r\n      \"Detachment Abilities\": [],\r\n      \"Tactical Objectives\": []\r\n    };\r\n    this.currentUnits = 0;\r\n  }\r\n\r\n  public addUnit(faction: string, type: string, name: string) {\r\n    this.listContents[type].push(new Unit(this.currentUnits, faction, type, name));\r\n    this.currentUnits++;\r\n    this.updateCosts();\r\n    this.renderList();\r\n  }\r\n\r\n  public removeUnit(id: number) {\r\n    for (let type in this.listContents) {\r\n      let tempArray: Array<Unit> = [];\r\n      for (let unit in this.listContents[type]) {\r\n        if (this.listContents[type][unit].id !== id) {\r\n          tempArray.push(this.listContents[type][unit]);\r\n        }\r\n      }\r\n      this.listContents[type] = tempArray;\r\n    }\r\n    this.updateCosts();\r\n    this.renderList();\r\n  }\r\n\r\n  public addSmiteSpell() {\r\n    this.listContents['Spells'].push(new SpellList('', 'Smite'));\r\n    this.renderList();\r\n  }\r\n\r\n  public addFactionSpells(faction: string, spells: string) {\r\n    this.listContents['Spells'].push(new SpellList(faction, spells));\r\n    this.renderList();\r\n  }\r\n\r\n  public updateCosts() {\r\n    let power = 0;\r\n    let points= 0;\r\n    let wounds = 0;\r\n    let models = 0;\r\n    for (let type in this.listContents) {\r\n      for (let unit of this.listContents[type]) {\r\n        if (unit !== null) {\r\n          power += unit.totalPower;\r\n          points += unit.totalPoints;\r\n          wounds += unit.totalWounds;\r\n          models += unit.totalModels;\r\n        }\r\n      }\r\n    } \r\n    window.list.costs.updateCostsExt([points, power, wounds, models]);\r\n  }\r\n\r\n  public renderList() {\r\n    let listContainer = (document.getElementById(\"newListContents\") as HTMLElement);\r\n    listContainer.innerHTML = '';\r\n    for (let type in this.listContents) {\r\n      if (this.listContents[type].length > 0) {\r\n        let imageName = this.getImageName(type);\r\n        listContainer.innerHTML += '<div id=\"typeHeader\"><img src=\"Content/40kListBuilder/resources/icons/' + imageName + '\"/><h1>' + type + '</h1></div>';\r\n      }\r\n      if (this.listContents[type][0] && this.listContents[type][0] instanceof Unit) {\r\n        for (let unit = 0; unit < this.listContents[type].length; unit++) {\r\n          if (this.listContents[type][unit] !== null) {\r\n            let unitInfo = this.listContents[type][unit] as Unit;\r\n            let unitTable = document.createElement('table');\r\n            unitTable.className = \"unitTable\";\r\n            unitTable.id = '' + unitInfo.id;\r\n            unitTable.innerHTML += unitInfo.getUnitNameAndCostHTML();\r\n            unitTable.innerHTML += unitInfo.getStatsHeadersHTML();\r\n            unitTable.innerHTML += unitInfo.getStatsHTML();\r\n            unitTable.innerHTML += unitInfo.getWeaponsHeadersHTML();\r\n            unitTable.innerHTML += unitInfo.getWeaponsHTML();\r\n            unitTable.innerHTML += unitInfo.getAbilitiesHTML();\r\n            unitTable.innerHTML += unitInfo.getPsykerHTML();\r\n            unitTable.innerHTML += unitInfo.getAllegianceHTML();\r\n            unitTable.innerHTML += unitInfo.getKeywordsHTML();\r\n            listContainer.appendChild(unitTable);\r\n            listContainer.appendChild(this.getUnitControls(unitInfo.id));\r\n            listContainer.innerHTML += '<div class=\"clear\"</div>';\r\n          }\r\n        }\r\n      }\r\n      else if (this.listContents[type][0] && this.listContents[type][0] instanceof SpellList) {\r\n        for (let spell = 0; spell < this.listContents[type].length; spell++) {\r\n          if (this.listContents[type][spell] !== null) {\r\n            listContainer.appendChild((this.listContents[type][spell] as SpellList).getSpellsHTML());\r\n          }\r\n        }\r\n        // TODO:\r\n        // Spells\r\n        // Strategems\r\n        // Warlord Traits\r\n        // Detachments\r\n      }\r\n    }\r\n    let spacer = document.createElement('div');\r\n    spacer.className = \"spacer\";\r\n    listContainer.appendChild(spacer);\r\n  }\r\n\r\n  public getImageName(type: string): string {\r\n    let imageName = '';\r\n    switch (type) {\r\n      case \"HQ\":\r\n        imageName = 'hq.png';\r\n        break;\r\n      case \"Troops\":\r\n        imageName = 'troops.png';\r\n        break;\r\n      case \"Elites\":\r\n        imageName = 'elites.png';\r\n        break;\r\n      case \"Fast Attack\":\r\n        imageName = 'fastattack.png';\r\n        break;\r\n      case \"Heavy Support\":\r\n        imageName = 'heavysupport.png';\r\n        break;\r\n      case \"Dedicated Transport\":\r\n        imageName = 'dedicatedtransport.png';\r\n        break;\r\n      case \"Flyer\":\r\n        imageName = 'flyers.png';\r\n        break;\r\n      case \"Fortification\":\r\n        imageName = 'fortifications.png';\r\n        break;\r\n      case \"Lord Of War\":\r\n        imageName = 'lordofwar.png';\r\n        break;\r\n      case \"Spells\":\r\n        imageName = 'spells.png';\r\n    }\r\n    return imageName;\r\n  }\r\n\r\n  private getUnitControls(id: number): HTMLElement {\r\n    let controlList = document.createElement('ul');\r\n    controlList.className = \"unitControls\";\r\n\r\n    let deleteBtn = document.createElement('li');\r\n    deleteBtn.className = \"button\";\r\n    deleteBtn.id = 'delete' + id;\r\n    deleteBtn.innerHTML = '<img onclick=\"list.armyList.removeUnit(' + id + ')\" src=\"Content/40kListBuilder/resources/icons/delete.png\"/>';\r\n    controlList.appendChild(deleteBtn);\r\n\r\n    let editBtn = document.createElement('li');\r\n    editBtn.className = \"button\";\r\n    editBtn.id = 'edit' + id;\r\n    editBtn.innerHTML = '<img onclick=\"list.editor.editUnit(' + id + ')\" src=\"Content/40kListBuilder/resources/icons/edit.png\"/>';\r\n    controlList.appendChild(editBtn);\r\n\r\n    return controlList;\r\n  }\r\n}\r\n","import Factions from '../data/factions';\r\nimport Settings from '../settings';\r\n\r\nexport default class FactionList {\r\n\r\n  private open: boolean;\r\n  private menuBtn: HTMLElement;\r\n  private factionList: HTMLElement;\r\n\r\n  constructor() {\r\n    this.open = false;\r\n    this.menuBtn = (document.getElementById(\"factionBtn\") as HTMLElement);\r\n    this.factionList = (document.getElementById(\"factionList\") as HTMLElement);\r\n  }\r\n\r\n  public init() {\r\n    this.setupFactionList();\r\n  }\r\n\r\n  private openNav() {\r\n    (document.getElementById(\"sidenav\") as HTMLElement).style.width = \"350px\";\r\n    (document.getElementById(\"availableList\") as HTMLElement).style.marginLeft = \"350px\";\r\n    (document.getElementById(\"newList\") as HTMLElement).style.paddingLeft = \"700px\";\r\n    this.open = true;\r\n  }\r\n\r\n  private closeNav() {\r\n    (document.getElementById(\"sidenav\") as HTMLElement).style.width = \"60px\";\r\n    (document.getElementById(\"availableList\") as HTMLElement).style.marginLeft = \"60px\";\r\n    (document.getElementById(\"newList\") as HTMLElement).style.paddingLeft = \"410px\";\r\n    this.open = false;\r\n  }\r\n\r\n  private toggleNav() {\r\n    if (this.open) {\r\n      this.closeNav();\r\n    }\r\n    else {\r\n      this.openNav();\r\n    }\r\n  }\r\n\r\n  private isOpen() {\r\n    return this.open;\r\n  }\r\n\r\n  private setupFactionList() {\r\n    this.menuBtn.onclick = () => { this.toggleNav(); };\r\n    if (!this.isOpen()) {\r\n      this.openNav();\r\n    }\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) !== -1) {\r\n        this.factionList.appendChild(this.createFactionListElement(faction, true));\r\n      }\r\n    }\r\n    for (let faction in Factions) {\r\n      if (Settings.supportedFactions.indexOf(faction) === -1) {\r\n        this.factionList.appendChild(this.createFactionListElement(faction, false));\r\n      }\r\n    }\r\n  }\r\n\r\n  private createFactionListElement(faction: string, supported: boolean): HTMLElement {\r\n    let listItem = document.createElement('li');\r\n    listItem.id = faction;\r\n    if (!supported) {\r\n      listItem.className = \"factionNotSupported\";\r\n    }\r\n    listItem.onclick = () => { this.factionSelected(faction); };\r\n    listItem.innerHTML = '<img src=\"Content/40kListBuilder/resources/icons/' + Factions[faction].icon + '\"/>' + faction;\r\n    return listItem;\r\n  }\r\n\r\n  private factionSelected(faction: string) {\r\n    window.list.unitList.factionSelected(faction);\r\n    if (this.isOpen()) {\r\n      this.closeNav();\r\n    }\r\n  }\r\n}\r\n","import AvailableUnit from \"../objects/availableUnit\";\r\n\r\nexport default class UnitList {\r\n\r\n  private currentFaction: string;\r\n  private availableList: Array<AvailableUnit>;\r\n\r\n  constructor() {\r\n    this.currentFaction = '';\r\n    this.availableList = [];\r\n  }\r\n\r\n  public factionSelected(faction: string) {\r\n    this.availableList = [];\r\n    this.currentFaction = faction;\r\n    let factionData = window.list.data.data[faction];\r\n    for (let type in factionData.units) {\r\n      let units = factionData.units[type];\r\n      for (let unit in units) {\r\n        this.availableList.push(new AvailableUnit(faction, type, unit));\r\n      }\r\n    }\r\n    this.renderList();\r\n  }\r\n\r\n  private renderList() {\r\n    let availableListHTML = (document.getElementById(\"availableList\") as HTMLElement);\r\n    availableListHTML.innerHTML = '<h2>' + this.currentFaction + '</h2>';\r\n\r\n    let containingList = document.createElement('ul');\r\n    let typeList = document.createElement('ul');\r\n    let currentType = \"\";\r\n    let listItem = document.createElement('li');\r\n\r\n    for (let unit of this.availableList) {\r\n      if (unit.type !== currentType) {\r\n        if (currentType !== \"\") {\r\n          containingList.appendChild(typeList);\r\n          typeList = document.createElement('ul');\r\n        }\r\n        typeList.innerHTML = unit.type + '<hr/>';\r\n        currentType = unit.type;\r\n      }    \r\n      listItem = document.createElement('li');\r\n      listItem.onclick = () => {\r\n        window.list.armyList.addUnit(unit.faction, unit.type, unit.name);\r\n      };\r\n      listItem.innerHTML = unit.name\r\n        + '<br/><div id=\"unitDetails\"><table><tr><td>Points: ' \r\n        + unit.points\r\n        + '</td><td>Power: '\r\n        + unit.power\r\n        + '</td><td>Wounds: '\r\n        + unit.wounds\r\n        + '</td><td>Models: '\r\n        + unit.models\r\n        + '</td></tr></table></div>';\r\n      typeList.appendChild(listItem);\r\n    }\r\n    containingList.appendChild(typeList);\r\n    \r\n    if (window.list.data.data[this.currentFaction].spells !== undefined) {\r\n      let spellsList = document.createElement('ul');\r\n      spellsList.innerHTML = 'Spells<hr/>';\r\n\r\n      let smite = document.createElement('li');\r\n      smite.id = \"smite\";\r\n      smite.onclick = () => {\r\n        window.list.armyList.addSmiteSpell();\r\n      };\r\n      smite.innerHTML = \"Smite\";\r\n      spellsList.appendChild(smite);\r\n\r\n      for (let spellType in window.list.data.data[this.currentFaction].spells) {\r\n        let id = this.currentFaction + '-' + spellType;\r\n        let spellItem = document.createElement('li');\r\n        spellItem.id = id;\r\n        spellItem.onclick = () => {\r\n          window.list.armyList.addFactionSpells(this.currentFaction, spellType);\r\n        };\r\n        spellItem.innerHTML = spellType;\r\n        spellsList.appendChild(spellItem);\r\n      }\r\n      containingList.appendChild(spellsList);\r\n    }\r\n\r\n    availableListHTML.appendChild(containingList);\r\n\r\n    let spacer = document.createElement('div');\r\n    spacer.className = \"spacer\";\r\n    availableListHTML.appendChild(spacer);\r\n  }\r\n}\r\n","export default class AvailableUnit {\r\n\r\n  public faction: string;\r\n  public type: string;\r\n  public name: string;\r\n  public unitInfo: any;\r\n  public points: number;\r\n  public power: number;\r\n  public wounds: number;\r\n  public models: number;\r\n\r\n  constructor(faction: string, type: string, unit: string) {\r\n    this.faction = faction;\r\n    this.type = type;\r\n    this.name = unit;\r\n    this.unitInfo = window.list.data.data[faction].units[type][unit];\r\n    this.points = this.getPointsValue();\r\n    this.power = this.getPowerValue();\r\n    this.wounds = this.getWoundsValue();\r\n    this.models = this.getModelsValue();\r\n  }\r\n\r\n  public getPointsValue() {\r\n    let points = 0;\r\n    for (let modelType of this.unitInfo.modelTypes) {\r\n      let modelPoints = 0;\r\n      let model = window.list.data.data[this.faction].models[modelType.model];\r\n      modelPoints += model.Points;  \r\n      if (!model.PointsIncludesWargear) {\r\n        for (let slot in model.Wargear) {\r\n          for (let weapon = 0; weapon < model.Wargear[slot][0].length; weapon++) {\r\n            modelPoints += window.list.data.data[this.faction].wargear[model.Wargear[slot][0][weapon]].Points;\r\n          } \r\n        }\r\n      }\r\n      points += (modelPoints * modelType.defaultAmount);\r\n    }\r\n    return points;\r\n  }\r\n\r\n  public getPowerValue() {\r\n    let power = 0;\r\n    power += this.unitInfo.power[0][1];\r\n    return power;\r\n  }\r\n\r\n  public getWoundsValue() {\r\n    let wounds = 0;\r\n    for (let modelType of this.unitInfo.modelTypes) {\r\n      let model = window.list.data.data[this.faction].models[modelType.model];\r\n      wounds += (model.W * modelType.defaultAmount); \r\n    }\r\n    return wounds;\r\n  }\r\n\r\n  public getModelsValue() {\r\n    let models = 0;\r\n    for (let modelType of this.unitInfo.modelTypes) {\r\n      models += modelType.defaultAmount;\r\n    }\r\n    return models;\r\n  }\r\n}\r\n","export default class Model {\r\n\r\n  public name: string;\r\n  public modelInfo: any;\r\n  public points: number;\r\n  public selectedWeaponConfig: any; // TODO - multiple slots\r\n  public selectedAllegiance: number;\r\n\r\n  constructor(name: string, modelInfo: any) {\r\n    this.name = name;\r\n    this.modelInfo = modelInfo;\r\n    this.points = modelInfo.Points;\r\n    this.selectedWeaponConfig = {};\r\n    this.selectedAllegiance = 0;\r\n  }\r\n}\r\n","export default class SpellList {\r\n\r\n  private faction: string;\r\n  private spellsName: string;\r\n  private spellConfig: any;\r\n\r\n  constructor(faction: string, spellsName: string) {\r\n    this.faction = faction;\r\n    this.spellsName = spellsName;\r\n    this.setSpellConfig();\r\n  }\r\n\r\n  public getSpellsHTML(): HTMLElement {\r\n    let spellTable = document.createElement('table');\r\n    spellTable.innerHTML = '<tr><th class=\"spellHeader\">' + this.spellsName + '</th></tr>';\r\n    for (let spell in this.spellConfig) {\r\n      spellTable.innerHTML += '<tr><td class=\"spellName\">' \r\n        + this.spellConfig[spell].name + '</td><td class=\"spellDescription\">'\r\n        + this.spellConfig[spell].description + '</td>';\r\n    }\r\n    return spellTable;\r\n  }\r\n\r\n  private setSpellConfig() {\r\n    if (this.spellsName === 'Smite') {\r\n      this.spellConfig = {\r\n        \"1\": {\r\n          \"name\": \"Smite\",\r\n          \"description\": \"Smite has a warp charge value of 5. If manifested, the closest visible enemy unit within 18\\\" of the psyker suffers D3 mortal wounds. If the result of the Psychic test was more than 10, the target suffers D6 mortal wounds instead.\"\r\n        }\r\n      };\r\n    }\r\n    else {\r\n      this.spellConfig = window.list.data.data[this.faction].spells[this.spellsName];\r\n    }\r\n  }\r\n}\r\n","import Model from '../objects/model';\r\n\r\nexport default class Unit {\r\n\r\n  public id: number;\r\n  public faction: string;\r\n  public type: string;\r\n  public name: string;\r\n\r\n  public totalModels: number;\r\n  public totalPoints: number;\r\n  public totalPower: number;\r\n  public totalWounds: number;\r\n\r\n  public unitInfo: any;\r\n  public models: any;\r\n\r\n  constructor(unitId: number, faction: string, type: string, name: string) {\r\n    this.id = unitId;\r\n    this.faction = faction;\r\n    this.type = type;\r\n    this.name = name;\r\n\r\n    this.totalModels = 0;\r\n    this.totalPoints = 0;\r\n    this.totalPower = 0;\r\n    this.totalWounds = 0;\r\n\r\n    this.unitInfo = window.list.data.data[faction].units[type][name];\r\n    this.models = {};\r\n\r\n    this.setupDefaultModels();\r\n    this.updateCosts();\r\n  }\r\n\r\n  public getUnitNameAndCostHTML(): string {\r\n    let costHTML =  'Points: ' + this.totalPoints\r\n                 +  ' | Power: ' + this.totalPower\r\n                 +  ' | Wounds: ' + this.totalWounds\r\n                 +  ' | Models: ' + this.totalModels;\r\n    let HTML = '<tr>'\r\n      + '<td class=\"name\" colspan=\"5\">' + this.name + '</td>'\r\n      + '<td class=\"cost\" colspan=\"5\">' + costHTML + '</td>'\r\n      + '</tr>';\r\n    \r\n    return HTML;\r\n  }\r\n\r\n  public getStatsHeadersHTML(): string {\r\n    let HTML = '<tr>'\r\n        + '<th class=\"statHeader\" id=\"name_H\">Name</th>'\r\n        + '<th class=\"statHeader\" id=\"m_H\">M</th>'\r\n        + '<th class=\"statHeader\" id=\"ws_H\">WS</th>'\r\n        + '<th class=\"statHeader\" id=\"bs_H\">BS</th>'\r\n        + '<th class=\"statHeader\" id=\"s_H\">S</th>'\r\n        + '<th class=\"statHeader\" id=\"t_H\">T</th>'\r\n        + '<th class=\"statHeader\" id=\"w_H\">W</th>'\r\n        + '<th class=\"statHeader\" id=\"a_H\">A</th>'\r\n        + '<th class=\"statHeader\" id=\"ld_H\">Ld</th>'\r\n        + '<th class=\"statHeader\" id=\"sv_H\">Sv</th>'\r\n        + '</tr>';\r\n    return HTML;\r\n  }\r\n\r\n  public getStatsHTML(): string {\r\n    let HTML = '';\r\n    for (let modelType in this.models) {\r\n      if (this.models[modelType].length > 0) {\r\n        let model = this.models[modelType][0];\r\n        let modelNumStr = '';\r\n        if (this.models[modelType].length > 1) {\r\n          modelNumStr = ' (' + this.models[modelType].length +')';\r\n        }\r\n        HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + model.name + modelNumStr + '</td>'\r\n          + '<td class=\"stat\" id=\"m\">' + this.getUnProfiledStats(model.modelInfo.M) + '</td>'\r\n          + '<td class=\"stat\" id=\"ws\">' + this.getUnProfiledStats(model.modelInfo.WS) + '</td>'\r\n          + '<td class=\"stat\" id=\"bs\">' + this.getUnProfiledStats(model.modelInfo.BS) + '</td>'\r\n          + '<td class=\"stat\" id=\"s\">' + this.getUnProfiledStats(model.modelInfo.S) + '</td>'\r\n          + '<td class=\"stat\" id=\"t\">' + this.getUnProfiledStats(model.modelInfo.T) + '</td>'\r\n          + '<td class=\"stat\" id=\"w\">' + this.getUnProfiledStats(model.modelInfo.W) + '</td>'\r\n          + '<td class=\"stat\" id=\"a\">' + this.getUnProfiledStats(model.modelInfo.A) +'</td>'\r\n          + '<td class=\"stat\" id=\"ld\">' + this.getUnProfiledStats(model.modelInfo.Ld) + '</td>'\r\n          + '<td class=\"stat\" id=\"sv\">' + this.getUnProfiledStats(model.modelInfo.Sv) + '</td>'\r\n          + '</tr>';\r\n      }\r\n    }\r\n    return HTML;\r\n  }\r\n\r\n  public getUnProfiledStats(stat: any) {\r\n    if (typeof stat === \"string\" || typeof stat === \"number\") {\r\n      return stat;\r\n    }\r\n    else {\r\n      let stats = '';\r\n      for (let i = 0; i < stat.length; i++) {\r\n        stats += '<b>' + stat[i].value + '</b> (' + stat[i].Wounds[0] + '-' + stat[i].Wounds[1] + ')<br/>';\r\n      }\r\n      return stats;\r\n    }\r\n  }\r\n\r\n  public getWeaponsHeadersHTML(): string {\r\n    let HTML = '<tr>'\r\n        + '<th class=\"leftHeader\">Wargear</th>'\r\n        + '<th>Range</th>'\r\n        + '<th>Type</th>'\r\n        + '<th>S</th>'\r\n        + '<th>AP</th>'\r\n        + '<th>D</th>'\r\n        + '<th colspan=\"4\">Abilities</th>'\r\n        + '</tr>';\r\n    return HTML;\r\n  }\r\n\r\n  public getWeaponsHTML(): string {\r\n    let listOfWeapons: Array<string> = [];\r\n    let amountsPerWeapon: Array<number> = [];\r\n    let HTML = '';\r\n    for (let modelType in this.models) {\r\n      for (let i = 0; i < this.models[modelType].length; i++) {\r\n        let weapons: Array<string> = [];\r\n        let wargear = this.models[modelType][i].modelInfo.Wargear;\r\n        for (let slot in wargear) {\r\n          let selectedIndex = this.models[modelType][i].selectedWeaponConfig[slot] || 0;\r\n          for (let weaponId of wargear[slot][selectedIndex]) {\r\n            weapons.push(weaponId);\r\n          }\r\n        }\r\n        for (let weapon in weapons) {\r\n          if (listOfWeapons.indexOf(weapons[weapon]) === -1) {\r\n            listOfWeapons.push(weapons[weapon]);\r\n            amountsPerWeapon.push(1);\r\n          }\r\n          else {\r\n            amountsPerWeapon[listOfWeapons.indexOf(weapons[weapon])]++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let weaponIndex in listOfWeapons) {\r\n      let weapon = listOfWeapons[weaponIndex];\r\n      let weaponInfo = window.list.data.data[this.faction].wargear[weapon];\r\n      let numberOf = '';\r\n      if (amountsPerWeapon[weaponIndex] > 1) {\r\n        numberOf = ' (' + amountsPerWeapon[weaponIndex] +')';\r\n      }\r\n      if (weaponInfo !== undefined) {\r\n        if (weaponInfo.WargearAbility !== undefined) {\r\n          HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"abilities\" colspan=\"9\">' + weaponInfo.WargearAbility + '</td>'\r\n          + '</tr>';\r\n        }\r\n        else if (weaponInfo.profiles === undefined) {\r\n          HTML += '<tr>'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + numberOf +'</td>'\r\n          + '<td class=\"stat\" id=\"range\">' + weaponInfo.Range + '</td>'\r\n          + '<td class=\"stat\" id=\"type\">' + weaponInfo.Type + '</td>'\r\n          + '<td class=\"stat\" id=\"s\">' + weaponInfo.S + '</td>'\r\n          + '<td class=\"stat\" id=\"ap\">' + weaponInfo.AP + '</td>'\r\n          + '<td class=\"stat\" id=\"d\">' + weaponInfo.D + '</td>'\r\n          + '<td class=\"stat\" id=\"abilities\" colspan=\"4\">' + weaponInfo.Abilities + '</td>'\r\n          + '</tr>';\r\n        }\r\n        else {\r\n          let desription = weaponInfo.description === undefined ? '' : weaponInfo.description;\r\n          HTML += '<tr class=\"profiledWeapon\">'\r\n          + '<td class=\"stat\" id=\"name\">' + weapon + '</td>'\r\n          + '<td class=\"stat\" id=\"description\" colspan=\"9\">' + desription + '</td>'\r\n          + '</tr>';\r\n          for (let profile in weaponInfo.profiles) {\r\n            let profileInfo = weaponInfo.profiles[profile];\r\n            if (profileInfo !== undefined) {\r\n              HTML += '<tr class=\"profile\">'\r\n              + '<td class=\"stat\" id=\"name\"> - ' + profile + '</td>'\r\n              + '<td class=\"stat\" id=\"range\">' + profileInfo.Range + '</td>'\r\n              + '<td class=\"stat\" id=\"type\">' + profileInfo.Type + '</td>'\r\n              + '<td class=\"stat\" id=\"s\">' + profileInfo.S + '</td>'\r\n              + '<td class=\"stat\" id=\"ap\">' + profileInfo.AP + '</td>'\r\n              + '<td class=\"stat\" id=\"d\">' + profileInfo.D + '</td>'\r\n              + '<td class=\"stat\" id=\"abilities\" colspan=\"4\">' + profileInfo.Abilities + '</td>'\r\n              + '</tr>';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return HTML;\r\n  }\r\n\r\n  public getAbilitiesHTML(): string {\r\n    let abilityHTML = '<tr class=\"abilities\"><th>Abilities</th><td colspan=\"9\">';\r\n    let abilityList: Array<any> = [];\r\n    for (let modelType in this.models) {\r\n      for (let i = 0; i < this.models[modelType].length; i++) {\r\n        let abilities = this.models[modelType][i].modelInfo.Abilities;\r\n        for (let ability in abilities) {\r\n          if (typeof abilities[ability] !== \"string\") {\r\n            for (let factionAbility in abilities[ability]) {\r\n              let htmlString = this.getFactionAbility(factionAbility);\r\n              if (abilityList.indexOf(htmlString) === -1) {\r\n                abilityList.push(htmlString);\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            let htmlString = '<b>' + ability + ':</b> ' + this.models[modelType][i].modelInfo.Abilities[ability] + '<br/>';\r\n            if (abilityList.indexOf(htmlString) === -1) {\r\n              abilityList.push(htmlString);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < abilityList.length; i++) {\r\n      abilityHTML += abilityList[i];\r\n      if (i < abilityList.length - 1) {\r\n        abilityHTML += '<br/>';\r\n      }\r\n    }\r\n    abilityHTML += '</td></tr>';\r\n    return abilityHTML;\r\n  }\r\n\r\n  public getFactionAbility(id: number | string) {\r\n    return '<b>' + window.list.data.data[this.faction].factionSpecialRules[id].name + '</b>: '\r\n    + window.list.data.data[this.faction].factionSpecialRules[id].description + '<br/>';\r\n  }\r\n\r\n  public getPsykerHTML(): string {\r\n    let psykerHTML = '';\r\n    for (let modelType in this.models) {\r\n      if (this.models[modelType].length > 0 && this.models[modelType][0].modelInfo.Psyker !== undefined) {\r\n        psykerHTML += '<tr class=\"psykerAbilities\"><th>Psyker</th>'\r\n          + '<td colspan=\"9\">' + this.models[modelType][0].modelInfo.Psyker\r\n          + '</td></tr>';\r\n      }\r\n    }\r\n    return psykerHTML;\r\n  }\r\n\r\n  public getAllegianceHTML(): string {\r\n    let allegianceHTML = '';\r\n    for (let modelType in this.models) {\r\n      if (this.models[modelType].length > 0) {\r\n        if (this.models[modelType][0].modelInfo.Allegiance !== undefined) {\r\n          allegianceHTML += '<tr class=\"allegiance\"><th>Allegiance</th><td colspan=\"9\">' + this.models[modelType][0].modelInfo.Allegiance[this.models[modelType][0].selectedAllegiance] + '</td></tr>';\r\n          return allegianceHTML;\r\n        }\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public getKeywordsHTML(): string {\r\n    let keywords: Array<any> = [];\r\n    for (let modelType in this.models) {\r\n      if (this.models[modelType].length > 0) {\r\n        for (let i = 0; i < this.models[modelType][0].modelInfo[\"Faction Keywords\"].length; i++) {\r\n          let keyword = this.models[modelType][0].modelInfo[\"Faction Keywords\"][i].toUpperCase();\r\n          if (keywords.indexOf(keyword) === -1) {\r\n            keywords.push(keyword);\r\n          }\r\n        }\r\n        for (let i = 0; i < this.models[modelType][0].modelInfo.Keywords.length; i++) {\r\n          let keyword = this.models[modelType][0].modelInfo.Keywords[i].toUpperCase();\r\n          if (keywords.indexOf(keyword) === -1) {\r\n            keywords.push(keyword);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let keywordHTML = '<tr class=\"keywords\"><th>Keywords</th><td colspan=\"9\">';\r\n    for (let keyword of keywords) {\r\n      if (keywords.indexOf(keyword) < keywords.length - 1) {\r\n        keywordHTML += keyword + ', ';\r\n      }\r\n      else {\r\n        keywordHTML += keyword;\r\n      }\r\n    }\r\n    keywordHTML += '</td></tr>';\r\n    return keywordHTML;\r\n  }\r\n\r\n  public updateCosts() {\r\n    this.calculateModels();\r\n    this.calculateWounds();\r\n    this.calculatePoints();\r\n    this.calculatePower();\r\n  }\r\n\r\n  public addModel(modelType: string) {\r\n    let model = this.unitInfo.modelTypes[modelType].model;\r\n    let modelInfo = window.list.data.data[this.faction].models[model];\r\n    if (modelInfo !== undefined) {\r\n      let newModel = new Model(model, modelInfo);\r\n      this.models[model].push(newModel);\r\n    }\r\n    this.updateCosts();\r\n    window.list.armyList.updateCosts();\r\n    window.list.editor.renderEdit();\r\n  }\r\n\r\n  public removeModel(modelType: string) {\r\n    let model = this.unitInfo.modelTypes[modelType].model;\r\n    if (this.models[model].length > 1) {\r\n      this.models[model].pop();\r\n    }\r\n    else {\r\n      this.models[model] = [];\r\n    }\r\n    this.updateCosts();\r\n    window.list.armyList.updateCosts();\r\n    window.list.editor.renderEdit();\r\n  }\r\n\r\n  public updateModelWargear(modelType: string, modelIndex: number, weaponSlot: string, selectedWeaponConfig: number) {\r\n    let model = this.unitInfo.modelTypes[modelType].model;\r\n    this.models[model][modelIndex].selectedWeaponConfig[weaponSlot] = selectedWeaponConfig;\r\n    this.updateCosts();\r\n    window.list.armyList.updateCosts();\r\n    window.list.editor.renderEdit();\r\n  }\r\n\r\n  public updateAllegiance(index: number) {\r\n    for (let modelType in this.models) {\r\n      for (let modelIndex in this.models[modelType]) {\r\n        let model = this.models[modelType][modelIndex];\r\n        model.selectedAllegiance = index;\r\n      }\r\n    }\r\n  }\r\n\r\n  private calculateModels() {\r\n    let models = 0;\r\n    for (let modelType in this.models) {\r\n      models += this.models[modelType].length;\r\n    }\r\n    this.totalModels = models;\r\n  }\r\n\r\n  private calculateWounds() {\r\n    let wounds = 0;\r\n    for (let modelType in this.models) {\r\n      for (let modelIndex in this.models[modelType]) {\r\n        wounds += this.models[modelType][modelIndex].modelInfo.W;\r\n      }\r\n    }\r\n    this.totalWounds = wounds;\r\n  }\r\n\r\n  private calculatePoints() {\r\n    let points = 0;\r\n    for (let modelType in this.models) {\r\n      for (let modelIndex in this.models[modelType]) {\r\n        let model = this.models[modelType][modelIndex];\r\n        points += model.modelInfo.Points;\r\n        if (!model.modelInfo.PointsIncludesWargear) {\r\n          for (let slot in model.modelInfo.Wargear) {\r\n            let index = model.selectedWeaponConfig[slot] || 0;\r\n            let selectedWeapons = model.modelInfo.Wargear[slot][index];\r\n            for (let weapon = 0; weapon < selectedWeapons.length; weapon++) {\r\n              points += window.list.data.data[this.faction].wargear[selectedWeapons[weapon]].Points;\r\n            } \r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.totalPoints = points;\r\n  }\r\n\r\n  private calculatePower() {\r\n    let power = 0;\r\n    for (let i = this.unitInfo.power.length - 1; i >= 0; i--) {\r\n      if (this.totalModels >= this.unitInfo.power[i][0]) {\r\n        power = this.unitInfo.power[i][1];\r\n        break;\r\n      }\r\n    }\r\n    this.totalPower = power;\r\n  }\r\n\r\n  private setupDefaultModels() {\r\n    for (let modelType in this.unitInfo.modelTypes) {\r\n      let model = this.unitInfo.modelTypes[modelType].model;\r\n      this.models[model] = [];\r\n      let modelInfo = window.list.data.data[this.faction].models[model];\r\n      if (modelInfo !== undefined) {\r\n        for (let num = 0; num < this.unitInfo.modelTypes[modelType].defaultAmount; num++) {\r\n          let newModel = new Model(model, modelInfo);\r\n          this.models[model].push(newModel);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","let Settings = {\r\n  supportedFactions: [\r\n    'Craftworlds',\r\n    'Harlequins',\r\n    'Ynnari'\r\n  ]\r\n};\r\n\r\nexport default Settings;\r\n","export default class Costs {\r\n\r\n  // cost values\r\n  public costs: Array<number>;\r\n\r\n  // elements\r\n  private pointsElement: HTMLElement;\r\n  private powerElement: HTMLElement;\r\n  private woundsElement: HTMLElement;\r\n  private modelsElement: HTMLElement;\r\n\r\n  constructor() {\r\n    this.costs = [0,0,0,0];\r\n    this.pointsElement = document.getElementById(\"POINTS\") as HTMLElement;\r\n    this.powerElement = document.getElementById(\"POWER\") as HTMLElement;\r\n    this.woundsElement = document.getElementById(\"WOUNDS\") as HTMLElement;\r\n    this.modelsElement = document.getElementById(\"MODELS\") as HTMLElement;\r\n  }\r\n\r\n  public init() {\r\n    this.updateCosts();\r\n  }\r\n\r\n  public updateCostsExt(costs: Array<number>) {\r\n    this.costs[0] = costs[0];\r\n    this.costs[1] = costs[1];\r\n    this.costs[2] = costs[2];\r\n    this.costs[3] = costs[3];\r\n    this.updateCosts();\r\n  }\r\n\r\n  private updateCosts() {\r\n    this.pointsElement.innerHTML = '<div class=\"costValue\">' + this.costs[0] + '</div>' + 'POINTS';\r\n    this.powerElement.innerHTML = '<div class=\"displayedCostSmall\">Power: ' + this.costs[1] + '</div>';\r\n    this.woundsElement.innerHTML = '<div class=\"displayedCostSmall\">Wounds: ' + this.costs[2] + '</div>';\r\n    this.modelsElement.innerHTML = '<div class=\"displayedCostSmall\">Models: ' + this.costs[3] + '</div>';\r\n  }\r\n}\r\n"]}